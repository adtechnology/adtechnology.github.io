var fs=require("fs");var UglifyJS=exports;var FILES=UglifyJS.FILES=["../lib/utils.js","../lib/ast.js","../lib/parse.js","../lib/transform.js","../lib/scope.js","../lib/output.js","../lib/compress.js","../lib/sourcemap.js","../lib/mozilla-ast.js","../lib/propmangle.js","../lib/minify.js","./exports.js"].map(function(a){return require.resolve(a)});new Function("MOZ_SourceMap","exports",function(){var a=FILES.map(function(b){return fs.readFileSync(b,"utf8")});a.push("exports.describe_ast = "+describe_ast.toString());return a.join("\n\n")}())(require("source-map"),UglifyJS);function describe_ast(){var b=OutputStream({beautify:true});function a(d){b.print("AST_"+d.TYPE);var c=d.SELF_PROPS.filter(function(e){return !/^\$/.test(e)});if(c.length>0){b.space();b.with_parens(function(){c.forEach(function(f,e){if(e){b.space()}b.print(f)})})}if(d.documentation){b.space();b.print_string(d.documentation)}if(d.SUBCLASSES.length>0){b.space();b.with_block(function(){d.SUBCLASSES.forEach(function(f,e){b.indent();a(f);b.newline()})})}}a(AST_Node);return b+"\n"}function infer_options(b){var a=UglifyJS.minify("",b);return a.error&&a.error.defs}UglifyJS.default_options=function(){var a={};Object.keys(infer_options({0:0})).forEach(function(c){var b={};b[c]={0:0};if(b=infer_options(b)){a[c]=b}});return a};