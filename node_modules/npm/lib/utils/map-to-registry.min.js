var url=require("url");var log=require("npmlog");var npa=require("npm-package-arg");var config;module.exports=mapToRegistry;function mapToRegistry(b,d,f){log.silly("mapToRegistry","name",b);var a;var g=npa(b);if(g.scope){b=b.replace("/","%2f");log.silly("mapToRegistry","scope (from package name)",g.scope);a=d.get(g.scope+":registry");if(!a){log.verbose("mapToRegistry","no registry URL found in name for scope",g.scope)}}var i=d.get("scope");if(!a&&i){if(i.charAt(0)!=="@"){i="@"+i}log.silly("mapToRegistry","scope (from config)",i);a=d.get(i+":registry");if(!a){log.verbose("mapToRegistry","no registry URL found in config for scope",i)}}if(!a){log.silly("mapToRegistry","using default registry");a=d.get("registry")}log.silly("mapToRegistry","registry",a);var e=d.getCredentialsByURI(a);var h=a.slice(-1)!=="/"?a+"/":a;var c;log.silly("mapToRegistry","data",g);if(g.type==="remote"){c=g.fetchSpec}else{c=url.resolve(h,b)}log.silly("mapToRegistry","uri",c);f(null,c,scopeAuth(c,a,e),h)}function scopeAuth(e,b,d){var f={scope:d.scope,email:d.email,alwaysAuth:d.alwaysAuth,token:undefined,username:undefined,password:undefined,auth:undefined};var a;var c;if(d.token||d.auth||(d.username&&d.password)){a=url.parse(e).hostname;c=url.parse(b).hostname;if(a===c){f.token=d.token;f.auth=d.auth;f.username=d.username;f.password=d.password}else{if(d.alwaysAuth){log.verbose("scopeAuth","alwaysAuth set for",b);f.token=d.token;f.auth=d.auth;f.username=d.username;f.password=d.password}else{log.silly("scopeAuth",e,"doesn't share host with registry",b)}}if(!config){config=require("../npm").config}if(config.get("otp")){f.otp=config.get("otp")}}return f};