module.exports=runScript;var lifecycle=require("./utils/lifecycle.js");var npm=require("./npm.js");var path=require("path");var readJson=require("read-package-json");var log=require("npmlog");var chain=require("slide").chain;var usage=require("./utils/usage");var output=require("./utils/output.js");runScript.usage=usage("run-script","npm run-script <command> [-- <args>...]");runScript.completion=function(d,b){var a=d.conf.argv.remain;if(a.length>=4){return b()}if(a.length===3){var c=path.join(npm.localPrefix,"package.json");return readJson(c,function(i,h){if(i&&i.code!=="ENOENT"&&i.code!=="ENOTDIR"){return b(i)}if(i){h={}}var f=Object.keys(h.scripts||{});console.error("local scripts",f);if(f.indexOf(a[2])!==-1){return b()}var e=npm.config.get("global")?npm.config.get("prefix"):npm.localPrefix;var g=path.resolve(e,"node_modules",a[2],"package.json");readJson(g,function(l,k){if(l&&l.code!=="ENOENT"&&l.code!=="ENOTDIR"){return b(l)}if(l){k={}}var j=Object.keys(k.scripts||{});return b(null,j)})})}readJson(path.join(npm.localPrefix,"package.json"),function(f,e){if(f&&f.code!=="ENOENT"&&f.code!=="ENOTDIR"){return b(f)}e=e||{};b(null,Object.keys(e.scripts||{}))})};function runScript(b,a){if(!b.length){return list(a)}var c=npm.localPrefix;var d=b.shift();readJson(path.resolve(c,"package.json"),function(f,e){if(f){return a(f)}run(e,c,d,b,a)})}function list(a){var b=path.join(npm.localPrefix,"package.json");var c=["publish","install","uninstall","test","stop","start","restart","version"].reduce(function(d,e){return d.concat(["pre"+e,e,"post"+e])},[]);return readJson(b,function(k,j){if(k&&k.code!=="ENOENT"&&k.code!=="ENOTDIR"){return a(k)}if(k){j={}}var i=Object.keys(j.scripts||{});var e=[];var f=[];i.forEach(function(d){if(c.indexOf(d)!==-1){e.push(d)}else{f.push(d)}});if(log.level==="silent"){return a(null,i)}if(npm.config.get("json")){output(JSON.stringify(j.scripts||{},null,2));return a(null,i)}if(npm.config.get("parseable")){i.forEach(function(d){output(d+":"+j.scripts[d])});return a(null,i)}var g="\n    ";var h="  ";if(e.length){output("Lifecycle scripts included in %s:",j.name)}e.forEach(function(d){output(h+d+g+j.scripts[d])});if(!e.length&&f.length){output("Scripts available in %s via `npm run-script`:",j.name)}else{if(f.length){output("\navailable via `npm run-script`:")}}f.forEach(function(d){output(h+d+g+j.scripts[d])});return a(null,i)})}function run(d,e,f,c,b){if(!d.scripts){d.scripts={}}var a;if(f==="restart"&&!d.scripts.restart){a=["prestop","stop","poststop","restart","prestart","start","poststart"]}else{if(!d.scripts[f]){if(f==="test"){d.scripts.test="echo 'Error: no test specified'"}else{if(f==="env"){if(process.platform==="win32"){log.verbose("run-script using default platform env: SET (Windows)");d.scripts[f]="SET"}else{log.verbose("run-script using default platform env: env (Unix)");d.scripts[f]="env"}}else{if(npm.config.get("if-present")){return b(null)}else{return b(new Error("missing script: "+f))}}}}a=[f]}if(!f.match(/^(pre|post)/)){a=["pre"+f].concat(a).concat("post"+f)}log.verbose("run-script",a);chain(a.map(function(g){if(d.scripts[g]&&g===f){d.scripts[g]=d.scripts[g]+joinArgs(c)}return[lifecycle,d,g,e,{unsafePerm:true}]}),b)}function joinArgs(b){var a="";b.forEach(function(c){a+=' "'+c.replace(/"/g,'\\"')+'"'});return a};