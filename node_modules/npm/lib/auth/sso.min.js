var log=require("npmlog");var npm=require("../npm.js");var output=require("../utils/output");var openUrl=require("../utils/open-url");module.exports.login=function login(f,c,d,a){var b=npm.config.get("sso-type");if(!b){return a(new Error("Missing option: sso-type"))}var e={auth:{username:"npm_"+b+"_auth_dummy_user",password:"placeholder",email:"support@npmjs.com",authType:b}};npm.registry.adduser(c,e,function(h,g){if(h){return a(h)}if(!g||!g.token){return a(new Error("no SSO token returned"))}if(!g.sso){return a(new Error("no SSO URL returned by services"))}openUrl(g.sso,"to complete your login please visit",function(){pollForSession(c,g.token,function(j,k){if(j){return a(j)}log.info("adduser","Authorized user %s",k);var i=d?" to scope "+d:"";output("Logged in as %s%s on %s.",k,i,c);a(null,{token:g.token})})})})};function pollForSession(b,c,a){log.info("adduser","Polling for validated SSO session");npm.registry.whoami(b,{auth:{token:c}},function(e,d){if(e&&e.statusCode!==401){a(e)}else{if(!d){setTimeout(function(){pollForSession(b,c,a)},npm.config.get("sso-poll-frequency"))}else{a(null,d)}}})};