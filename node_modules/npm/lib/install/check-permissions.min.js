"use strict";var path=require("path");var log=require("npmlog");var validate=require("aproba");var uniq=require("lodash.uniq");var asyncMap=require("slide").asyncMap;var npm=require("../npm.js");var exists=require("./exists.js");var writable=require("./writable.js");module.exports=function(b,a){validate("AF",arguments);var c=[];asyncMap(b,function(g,d){var f=g[0];var e=g[1];switch(f){case"add":hasAnyWriteAccess(path.resolve(e.path,".."),c,d);break;case"update":case"remove":hasWriteAccess(e.path,c,andHasWriteAccess(path.resolve(e.path,".."),c,d));break;case"move":hasAnyWriteAccess(e.path,c,andHasWriteAccess(path.resolve(e.fromPath,".."),c,d));break;default:d()}},function(){if(!c.length){return a()}uniq(c.map(function(d){return"Missing write access to "+d.path})).forEach(function(d){log.warn("checkPermissions",d)});npm.config.get("force")?a():a(c[0])})};function andHasWriteAccess(b,c,a){validate("SAF",arguments);return function(){hasWriteAccess(b,c,a)}}function hasAnyWriteAccess(b,d,a){validate("SAF",arguments);c();function c(){var e=path.resolve(b,"..");exists(b,function(f){if(!f||e===b){return hasWriteAccess(b,d,a)}else{b=e;c()}})}}function hasWriteAccess(b,c,a){validate("SAF",arguments);writable(b,function(d){if(d){c.push(d)}a()})};