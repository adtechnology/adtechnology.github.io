var mod_assert=require("assert-plus");var mod_util=require("util");var mod_extsprintf=require("extsprintf");var mod_verror=require("verror");var mod_jsonschema=require("json-schema");exports.deepCopy=deepCopy;exports.deepEqual=deepEqual;exports.isEmpty=isEmpty;exports.hasKey=hasKey;exports.forEachKey=forEachKey;exports.pluck=pluck;exports.flattenObject=flattenObject;exports.flattenIter=flattenIter;exports.validateJsonObject=validateJsonObjectJS;exports.validateJsonObjectJS=validateJsonObjectJS;exports.randElt=randElt;exports.extraProperties=extraProperties;exports.mergeObjects=mergeObjects;exports.startsWith=startsWith;exports.endsWith=endsWith;exports.parseInteger=parseInteger;exports.iso8601=iso8601;exports.rfc1123=rfc1123;exports.parseDateTime=parseDateTime;exports.hrtimediff=hrtimeDiff;exports.hrtimeDiff=hrtimeDiff;exports.hrtimeAccum=hrtimeAccum;exports.hrtimeAdd=hrtimeAdd;exports.hrtimeNanosec=hrtimeNanosec;exports.hrtimeMicrosec=hrtimeMicrosec;exports.hrtimeMillisec=hrtimeMillisec;function deepCopy(g){var e,h;var f="__deepCopy";if(g&&g[f]){throw (new Error("attempted deep copy of cyclic object"))}if(g&&g.constructor==Object){e={};g[f]=true;for(h in g){if(h==f){continue}e[h]=deepCopy(g[h])}delete (g[f]);return(e)}if(g&&g.constructor==Array){e=[];g[f]=true;for(h=0;h<g.length;h++){e.push(deepCopy(g[h]))}delete (g[f]);return(e)}return(g)}function deepEqual(f,d){if(typeof(f)!=typeof(d)){return(false)}if(f===null||d===null||typeof(f)!="object"){return(f===d)}if(f.constructor!=d.constructor){return(false)}var e;for(e in f){if(!d.hasOwnProperty(e)){return(false)}if(!deepEqual(f[e],d[e])){return(false)}}for(e in d){if(!f.hasOwnProperty(e)){return(false)}}return(true)}function isEmpty(c){var d;for(d in c){return(false)}return(true)}function hasKey(c,d){mod_assert.equal(typeof(d),"string");return(Object.prototype.hasOwnProperty.call(c,d))}function forEachKey(d,f){for(var e in d){if(hasKey(d,e)){f(e,d[e])}}}function pluck(c,d){mod_assert.equal(typeof(d),"string");return(pluckv(c,d))}function pluckv(g,e){if(g===null||typeof(g)!=="object"){return(undefined)}if(g.hasOwnProperty(e)){return(g[e])}var f=e.indexOf(".");if(f==-1){return(undefined)}var h=e.substr(0,f);if(!g.hasOwnProperty(h)){return(undefined)}return(pluckv(g[h],e.substr(f+1)))}function flattenIter(e,d,f){doFlattenIter(e,d,[],f)}function doFlattenIter(k,j,h,i){var l;var g;if(j===0){l=h.slice(0);l.push(k);i(l);return}mod_assert.ok(k!==null);mod_assert.equal(typeof(k),"object");mod_assert.equal(typeof(j),"number");mod_assert.ok(j>=0);for(g in k){l=h.slice(0);l.push(g);doFlattenIter(k[g],j-1,l,i)}}function flattenObject(e,h){if(h===0){return([e])}mod_assert.ok(e!==null);mod_assert.equal(typeof(e),"object");mod_assert.equal(typeof(h),"number");mod_assert.ok(h>=0);var g=[];var f;for(f in e){flattenObject(e[f],h-1).forEach(function(a){g.push([f].concat(a))})}return(g)}function startsWith(c,d){return(c.substr(0,d.length)==d)}function endsWith(c,d){return(c.substr(c.length-d.length,d.length)==d)}function iso8601(b){if(typeof(b)=="number"){b=new Date(b)}mod_assert.ok(b.constructor===Date);return(mod_extsprintf.sprintf("%4d-%02d-%02dT%02d:%02d:%02d.%03dZ",b.getUTCFullYear(),b.getUTCMonth()+1,b.getUTCDate(),b.getUTCHours(),b.getUTCMinutes(),b.getUTCSeconds(),b.getUTCMilliseconds()))}var RFC1123_MONTHS=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];var RFC1123_DAYS=["Sun","Mon","Tue","Wed","Thu","Fri","Sat"];function rfc1123(b){return(mod_extsprintf.sprintf("%s, %02d %s %04d %02d:%02d:%02d GMT",RFC1123_DAYS[b.getUTCDay()],b.getUTCDate(),RFC1123_MONTHS[b.getUTCMonth()],b.getUTCFullYear(),b.getUTCHours(),b.getUTCMinutes(),b.getUTCSeconds()))}function parseDateTime(c){var d=+c;if(!isNaN(d)){return(new Date(d))}else{return(new Date(c))}}var MAX_SAFE_INTEGER=Number.MAX_SAFE_INTEGER||9007199254740991;var MIN_SAFE_INTEGER=Number.MIN_SAFE_INTEGER||-9007199254740991;var PI_DEFAULTS={base:10,allowSign:true,allowPrefix:false,allowTrailing:false,allowImprecise:false,trimWhitespace:false,leadingZeroIsOctal:false};var CP_0=48;var CP_9=57;var CP_A=65;var CP_B=66;var CP_O=79;var CP_T=84;var CP_X=88;var CP_Z=90;var CP_a=97;var CP_b=98;var CP_o=111;var CP_t=116;var CP_x=120;var CP_z=122;var PI_CONV_DEC=48;var PI_CONV_UC=55;var PI_CONV_LC=87;function parseInteger(s,p){mod_assert.string(s,"str");mod_assert.optionalObject(p,"options");var y=false;var c=PI_DEFAULTS;if(p){y=hasKey(p,"base");c=mergeObjects(c,p);mod_assert.number(c.base,"options.base");mod_assert.ok(c.base>=2,"options.base >= 2");mod_assert.ok(c.base<=36,"options.base <= 36");mod_assert.bool(c.allowSign,"options.allowSign");mod_assert.bool(c.allowPrefix,"options.allowPrefix");mod_assert.bool(c.allowTrailing,"options.allowTrailing");mod_assert.bool(c.allowImprecise,"options.allowImprecise");mod_assert.bool(c.trimWhitespace,"options.trimWhitespace");mod_assert.bool(c.leadingZeroIsOctal,"options.leadingZeroIsOctal");if(c.leadingZeroIsOctal){mod_assert.ok(!y,'"base" and "leadingZeroIsOctal" are mutually exclusive')}}var t;var v=-1;var x=c.base;var z;var w=1;var q=0;var r=0;var u=s.length;if(c.trimWhitespace){while(r<u&&isSpace(s.charCodeAt(r))){++r}}if(c.allowSign){if(s[r]==="-"){r+=1;w=-1}else{if(s[r]==="+"){r+=1}}}if(s[r]==="0"){if(c.allowPrefix){v=prefixToBase(s.charCodeAt(r+1));if(v!==-1&&(!y||v===x)){x=v;r+=2}}if(v===-1&&c.leadingZeroIsOctal){x=8}}for(z=r;r<u;++r){t=translateDigit(s.charCodeAt(r));if(t!==-1&&t<x){q*=x;q+=t}else{break}}if(z===r){return(new Error("invalid number: "+JSON.stringify(s)))}if(c.trimWhitespace){while(r<u&&isSpace(s.charCodeAt(r))){++r}}if(r<u&&!c.allowTrailing){return(new Error("trailing characters after number: "+JSON.stringify(s.slice(r))))}if(q===0){return(0)}var o=q*w;if(!c.allowImprecise&&(q>MAX_SAFE_INTEGER||o<MIN_SAFE_INTEGER)){return(new Error("number is outside of the supported range: "+JSON.stringify(s.slice(z,r))))}return(o)}function translateDigit(b){if(b>=CP_0&&b<=CP_9){return(b-PI_CONV_DEC)}else{if(b>=CP_A&&b<=CP_Z){return(b-PI_CONV_UC)}else{if(b>=CP_a&&b<=CP_z){return(b-PI_CONV_LC)}else{return(-1)}}}}function isSpace(b){return(b===32)||(b>=9&&b<=13)||(b===160)||(b===5760)||(b===6158)||(b>=8192&&b<=8202)||(b===8232)||(b===8233)||(b===8239)||(b===8287)||(b===12288)||(b===65279)}function prefixToBase(b){if(b===CP_b||b===CP_B){return(2)}else{if(b===CP_o||b===CP_O){return(8)}else{if(b===CP_t||b===CP_T){return(10)}else{if(b===CP_x||b===CP_X){return(16)}else{return(-1)}}}}}function validateJsonObjectJS(p,i){var n=mod_jsonschema.validate(i,p);if(n.errors.length===0){return(null)}var j=n.errors[0];var r=j.property;var l=j.message.toLowerCase();var m,o;if((m=l.indexOf("the property "))!=-1&&(o=l.indexOf(" is not defined in the schema and the schema does not allow additional properties"))!=-1){m+="the property ".length;if(r===""){r=l.substr(m,o-m)}else{r=r+"."+l.substr(m,o-m)}l="unsupported property"}var q=new mod_verror.VError('property "%s": %s',r,l);q.jsv_details=j;return(q)}function randElt(b){mod_assert.ok(Array.isArray(b)&&b.length>0,"randElt argument must be a non-empty array");return(b[Math.floor(Math.random()*b.length)])}function assertHrtime(a){mod_assert.ok(a[0]>=0&&a[1]>=0,"negative numbers not allowed in hrtimes");mod_assert.ok(a[1]<1000000000,"nanoseconds column overflow")}function hrtimeDiff(b,f){assertHrtime(b);assertHrtime(f);mod_assert.ok(b[0]>f[0]||(b[0]==f[0]&&b[1]>=f[1]),"negative differences not allowed");var a=[b[0]-f[0],0];if(b[1]>=f[1]){a[1]=b[1]-f[1]}else{a[0]--;a[1]=1000000000-(f[1]-b[1])}return(a)}function hrtimeNanosec(a){assertHrtime(a);return(Math.floor(a[0]*1000000000+a[1]))}function hrtimeMicrosec(a){assertHrtime(a);return(Math.floor(a[0]*1000000+a[1]/1000))}function hrtimeMillisec(a){assertHrtime(a);return(Math.floor(a[0]*1000+a[1]/1000000))}function hrtimeAccum(a,b){assertHrtime(a);assertHrtime(b);a[1]+=b[1];if(a[1]>=1000000000){a[0]++;a[1]-=1000000000}a[0]+=b[0];return(a)}function hrtimeAdd(b,f){assertHrtime(b);var a=[b[0],b[1]];return(hrtimeAccum(a,f))}function extraProperties(d,f){mod_assert.ok(typeof(d)==="object"&&d!==null,"obj argument must be a non-null object");mod_assert.ok(Array.isArray(f),"allowed argument must be an array of strings");for(var e=0;e<f.length;e++){mod_assert.ok(typeof(f[e])==="string","allowed argument must be an array of strings")}return(Object.keys(d).filter(function(a){return(f.indexOf(a)===-1)}))}function mergeObjects(g,i,j){var h,f;h={};if(j){for(f in j){h[f]=j[f]}}if(g){for(f in g){h[f]=g[f]}}if(i){for(f in i){h[f]=i[f]}}return(h)};