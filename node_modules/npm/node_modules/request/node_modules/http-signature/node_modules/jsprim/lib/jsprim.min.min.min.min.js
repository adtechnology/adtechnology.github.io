var mod_assert=require("assert-plus");var mod_util=require("util");var mod_extsprintf=require("extsprintf");var mod_verror=require("verror");var mod_jsonschema=require("json-schema");exports.deepCopy=deepCopy;exports.deepEqual=deepEqual;exports.isEmpty=isEmpty;exports.hasKey=hasKey;exports.forEachKey=forEachKey;exports.pluck=pluck;exports.flattenObject=flattenObject;exports.flattenIter=flattenIter;exports.validateJsonObject=validateJsonObjectJS;exports.validateJsonObjectJS=validateJsonObjectJS;exports.randElt=randElt;exports.extraProperties=extraProperties;exports.mergeObjects=mergeObjects;exports.startsWith=startsWith;exports.endsWith=endsWith;exports.parseInteger=parseInteger;exports.iso8601=iso8601;exports.rfc1123=rfc1123;exports.parseDateTime=parseDateTime;exports.hrtimediff=hrtimeDiff;exports.hrtimeDiff=hrtimeDiff;exports.hrtimeAccum=hrtimeAccum;exports.hrtimeAdd=hrtimeAdd;exports.hrtimeNanosec=hrtimeNanosec;exports.hrtimeMicrosec=hrtimeMicrosec;exports.hrtimeMillisec=hrtimeMillisec;function deepCopy(e){var g,f;var h="__deepCopy";if(e&&e[h]){throw (new Error("attempted deep copy of cyclic object"))}if(e&&e.constructor==Object){g={};e[h]=true;for(f in e){if(f==h){continue}g[f]=deepCopy(e[f])}delete (e[h]);return(g)}if(e&&e.constructor==Array){g=[];e[h]=true;for(f=0;f<e.length;f++){g.push(deepCopy(e[f]))}delete (e[h]);return(g)}return(e)}function deepEqual(e,f){if(typeof(e)!=typeof(f)){return(false)}if(e===null||f===null||typeof(e)!="object"){return(e===f)}if(e.constructor!=f.constructor){return(false)}var d;for(d in e){if(!f.hasOwnProperty(d)){return(false)}if(!deepEqual(e[d],f[d])){return(false)}}for(d in f){if(!e.hasOwnProperty(d)){return(false)}}return(true)}function isEmpty(c){var d;for(d in c){return(false)}return(true)}function hasKey(c,d){mod_assert.equal(typeof(d),"string");return(Object.prototype.hasOwnProperty.call(c,d))}function forEachKey(f,e){for(var d in f){if(hasKey(f,d)){e(d,f[d])}}}function pluck(c,d){mod_assert.equal(typeof(d),"string");return(pluckv(c,d))}function pluckv(e,g){if(e===null||typeof(e)!=="object"){return(undefined)}if(e.hasOwnProperty(g)){return(e[g])}var h=g.indexOf(".");if(h==-1){return(undefined)}var f=g.substr(0,h);if(!e.hasOwnProperty(f)){return(undefined)}return(pluckv(e[f],g.substr(h+1)))}function flattenIter(d,f,e){doFlattenIter(d,f,[],e)}function doFlattenIter(g,l,j,k){var h;var i;if(l===0){h=j.slice(0);h.push(g);k(h);return}mod_assert.ok(g!==null);mod_assert.equal(typeof(g),"object");mod_assert.equal(typeof(l),"number");mod_assert.ok(l>=0);for(i in g){h=j.slice(0);h.push(i);doFlattenIter(g[i],l-1,h,k)}}function flattenObject(g,f){if(f===0){return([g])}mod_assert.ok(g!==null);mod_assert.equal(typeof(g),"object");mod_assert.equal(typeof(f),"number");mod_assert.ok(f>=0);var e=[];var h;for(h in g){flattenObject(g[h],f-1).forEach(function(a){e.push([h].concat(a))})}return(e)}function startsWith(c,d){return(c.substr(0,d.length)==d)}function endsWith(c,d){return(c.substr(c.length-d.length,d.length)==d)}function iso8601(b){if(typeof(b)=="number"){b=new Date(b)}mod_assert.ok(b.constructor===Date);return(mod_extsprintf.sprintf("%4d-%02d-%02dT%02d:%02d:%02d.%03dZ",b.getUTCFullYear(),b.getUTCMonth()+1,b.getUTCDate(),b.getUTCHours(),b.getUTCMinutes(),b.getUTCSeconds(),b.getUTCMilliseconds()))}var RFC1123_MONTHS=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];var RFC1123_DAYS=["Sun","Mon","Tue","Wed","Thu","Fri","Sat"];function rfc1123(b){return(mod_extsprintf.sprintf("%s, %02d %s %04d %02d:%02d:%02d GMT",RFC1123_DAYS[b.getUTCDay()],b.getUTCDate(),RFC1123_MONTHS[b.getUTCMonth()],b.getUTCFullYear(),b.getUTCHours(),b.getUTCMinutes(),b.getUTCSeconds()))}function parseDateTime(c){var d=+c;if(!isNaN(d)){return(new Date(d))}else{return(new Date(c))}}var MAX_SAFE_INTEGER=Number.MAX_SAFE_INTEGER||9007199254740991;var MIN_SAFE_INTEGER=Number.MIN_SAFE_INTEGER||-9007199254740991;var PI_DEFAULTS={base:10,allowSign:true,allowPrefix:false,allowTrailing:false,allowImprecise:false,trimWhitespace:false,leadingZeroIsOctal:false};var CP_0=48;var CP_9=57;var CP_A=65;var CP_B=66;var CP_O=79;var CP_T=84;var CP_X=88;var CP_Z=90;var CP_a=97;var CP_b=98;var CP_o=111;var CP_t=116;var CP_x=120;var CP_z=122;var PI_CONV_DEC=48;var PI_CONV_UC=55;var PI_CONV_LC=87;function parseInteger(c,x){mod_assert.string(c,"str");mod_assert.optionalObject(x,"options");var t=false;var v=PI_DEFAULTS;if(x){t=hasKey(x,"base");v=mergeObjects(v,x);mod_assert.number(v.base,"options.base");mod_assert.ok(v.base>=2,"options.base >= 2");mod_assert.ok(v.base<=36,"options.base <= 36");mod_assert.bool(v.allowSign,"options.allowSign");mod_assert.bool(v.allowPrefix,"options.allowPrefix");mod_assert.bool(v.allowTrailing,"options.allowTrailing");mod_assert.bool(v.allowImprecise,"options.allowImprecise");mod_assert.bool(v.trimWhitespace,"options.trimWhitespace");mod_assert.bool(v.leadingZeroIsOctal,"options.leadingZeroIsOctal");if(v.leadingZeroIsOctal){mod_assert.ok(!t,'"base" and "leadingZeroIsOctal" are mutually exclusive')}}var o;var q=-1;var s=v.base;var u;var r=1;var y=0;var z=0;var p=c.length;if(v.trimWhitespace){while(z<p&&isSpace(c.charCodeAt(z))){++z}}if(v.allowSign){if(c[z]==="-"){z+=1;r=-1}else{if(c[z]==="+"){z+=1}}}if(c[z]==="0"){if(v.allowPrefix){q=prefixToBase(c.charCodeAt(z+1));if(q!==-1&&(!t||q===s)){s=q;z+=2}}if(q===-1&&v.leadingZeroIsOctal){s=8}}for(u=z;z<p;++z){o=translateDigit(c.charCodeAt(z));if(o!==-1&&o<s){y*=s;y+=o}else{break}}if(u===z){return(new Error("invalid number: "+JSON.stringify(c)))}if(v.trimWhitespace){while(z<p&&isSpace(c.charCodeAt(z))){++z}}if(z<p&&!v.allowTrailing){return(new Error("trailing characters after number: "+JSON.stringify(c.slice(z))))}if(y===0){return(0)}var w=y*r;if(!v.allowImprecise&&(y>MAX_SAFE_INTEGER||w<MIN_SAFE_INTEGER)){return(new Error("number is outside of the supported range: "+JSON.stringify(c.slice(u,z))))}return(w)}function translateDigit(b){if(b>=CP_0&&b<=CP_9){return(b-PI_CONV_DEC)}else{if(b>=CP_A&&b<=CP_Z){return(b-PI_CONV_UC)}else{if(b>=CP_a&&b<=CP_z){return(b-PI_CONV_LC)}else{return(-1)}}}}function isSpace(b){return(b===32)||(b>=9&&b<=13)||(b===160)||(b===5760)||(b===6158)||(b>=8192&&b<=8202)||(b===8232)||(b===8233)||(b===8239)||(b===8287)||(b===12288)||(b===65279)}function prefixToBase(b){if(b===CP_b||b===CP_B){return(2)}else{if(b===CP_o||b===CP_O){return(8)}else{if(b===CP_t||b===CP_T){return(10)}else{if(b===CP_x||b===CP_X){return(16)}else{return(-1)}}}}}function validateJsonObjectJS(p,i){var n=mod_jsonschema.validate(i,p);if(n.errors.length===0){return(null)}var j=n.errors[0];var r=j.property;var l=j.message.toLowerCase();var m,o;if((m=l.indexOf("the property "))!=-1&&(o=l.indexOf(" is not defined in the schema and the schema does not allow additional properties"))!=-1){m+="the property ".length;if(r===""){r=l.substr(m,o-m)}else{r=r+"."+l.substr(m,o-m)}l="unsupported property"}var q=new mod_verror.VError('property "%s": %s',r,l);q.jsv_details=j;return(q)}function randElt(b){mod_assert.ok(Array.isArray(b)&&b.length>0,"randElt argument must be a non-empty array");return(b[Math.floor(Math.random()*b.length)])}function assertHrtime(a){mod_assert.ok(a[0]>=0&&a[1]>=0,"negative numbers not allowed in hrtimes");mod_assert.ok(a[1]<1000000000,"nanoseconds column overflow")}function hrtimeDiff(f,a){assertHrtime(f);assertHrtime(a);mod_assert.ok(f[0]>a[0]||(f[0]==a[0]&&f[1]>=a[1]),"negative differences not allowed");var b=[f[0]-a[0],0];if(f[1]>=a[1]){b[1]=f[1]-a[1]}else{b[0]--;b[1]=1000000000-(a[1]-f[1])}return(b)}function hrtimeNanosec(a){assertHrtime(a);return(Math.floor(a[0]*1000000000+a[1]))}function hrtimeMicrosec(a){assertHrtime(a);return(Math.floor(a[0]*1000000+a[1]/1000))}function hrtimeMillisec(a){assertHrtime(a);return(Math.floor(a[0]*1000+a[1]/1000000))}function hrtimeAccum(a,b){assertHrtime(a);assertHrtime(b);a[1]+=b[1];if(a[1]>=1000000000){a[0]++;a[1]-=1000000000}a[0]+=b[0];return(a)}function hrtimeAdd(f,a){assertHrtime(f);var b=[f[0],f[1]];return(hrtimeAccum(b,a))}function extraProperties(f,e){mod_assert.ok(typeof(f)==="object"&&f!==null,"obj argument must be a non-null object");mod_assert.ok(Array.isArray(e),"allowed argument must be an array of strings");for(var d=0;d<e.length;d++){mod_assert.ok(typeof(e[d])==="string","allowed argument must be an array of strings")}return(Object.keys(f).filter(function(a){return(e.indexOf(a)===-1)}))}function mergeObjects(i,f,g){var j,h;j={};if(g){for(h in g){j[h]=g[h]}}if(i){for(h in i){j[h]=i[h]}}if(f){for(h in f){j[h]=f[h]}}return(j)};