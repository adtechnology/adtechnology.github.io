module.exports=Certificate;var assert=require("assert-plus");var algs=require("./algs");var crypto=require("crypto");var Fingerprint=require("./fingerprint");var Signature=require("./signature");var errs=require("./errors");var util=require("util");var utils=require("./utils");var Key=require("./key");var PrivateKey=require("./private-key");var Identity=require("./identity");var formats={};formats.openssh=require("./formats/openssh-cert");formats.x509=require("./formats/x509");formats.pem=require("./formats/x509-pem");var CertificateParseError=errs.CertificateParseError;var InvalidAlgorithmError=errs.InvalidAlgorithmError;function Certificate(b){assert.object(b,"options");assert.arrayOfObject(b.subjects,"options.subjects");utils.assertCompatible(b.subjects[0],Identity,[1,0],"options.subjects");utils.assertCompatible(b.subjectKey,Key,[1,0],"options.subjectKey");utils.assertCompatible(b.issuer,Identity,[1,0],"options.issuer");if(b.issuerKey!==undefined){utils.assertCompatible(b.issuerKey,Key,[1,0],"options.issuerKey")}assert.object(b.signatures,"options.signatures");assert.buffer(b.serial,"options.serial");assert.date(b.validFrom,"options.validFrom");assert.date(b.validUntil,"optons.validUntil");assert.optionalArrayOfString(b.purposes,"options.purposes");this._hashCache={};this.subjects=b.subjects;this.issuer=b.issuer;this.subjectKey=b.subjectKey;this.issuerKey=b.issuerKey;this.signatures=b.signatures;this.serial=b.serial;this.validFrom=b.validFrom;this.validUntil=b.validUntil;this.purposes=b.purposes}Certificate.formats=formats;Certificate.prototype.toBuffer=function(c,d){if(c===undefined){c="x509"}assert.string(c,"format");assert.object(formats[c],"formats[format]");assert.optionalObject(d,"options");return(formats[c].write(this,d))};Certificate.prototype.toString=function(c,d){if(c===undefined){c="pem"}return(this.toBuffer(c,d).toString())};Certificate.prototype.fingerprint=function(c){if(c===undefined){c="sha256"}assert.string(c,"algorithm");var d={type:"certificate",hash:this.hash(c),algorithm:c};return(new Fingerprint(d))};Certificate.prototype.hash=function(c){assert.string(c,"algorithm");c=c.toLowerCase();if(algs.hashAlgs[c]===undefined){throw (new InvalidAlgorithmError(c))}if(this._hashCache[c]){return(this._hashCache[c])}var d=crypto.createHash(c).update(this.toBuffer("x509")).digest();this._hashCache[c]=d;return(d)};Certificate.prototype.isExpired=function(b){if(b===undefined){b=new Date()}return(!((b.getTime()>=this.validFrom.getTime())&&(b.getTime()<this.validUntil.getTime())))};Certificate.prototype.isSignedBy=function(b){utils.assertCompatible(b,Certificate,[1,0],"issuer");if(!this.issuer.equals(b.subjects[0])){return(false)}if(this.issuer.purposes&&this.issuer.purposes.length>0&&this.issuer.purposes.indexOf("ca")===-1){return(false)}return(this.isSignedByKey(b.subjectKey))};Certificate.prototype.isSignedByKey=function(f){utils.assertCompatible(f,Key,[1,2],"issuerKey");if(this.issuerKey!==undefined){return(this.issuerKey.fingerprint("sha512").matches(f))}var e=Object.keys(this.signatures)[0];var d=formats[e].verify(this,f);if(d){this.issuerKey=f}return(d)};Certificate.prototype.signWith=function(h){utils.assertCompatible(h,PrivateKey,[1,2],"key");var f=Object.keys(formats);var g=false;for(var i=0;i<f.length;++i){if(f[i]!=="pem"){var j=formats[f[i]].sign(this,h);if(j===true){g=true}}}if(!g){throw (new Error("Failed to sign the certificate for any available certificate formats"))}};Certificate.createSelfSigned=function(w,o,m){var q;if(Array.isArray(w)){q=w}else{q=[w]}assert.arrayOfObject(q);q.forEach(function(a){utils.assertCompatible(a,Identity,[1,0],"subject")});utils.assertCompatible(o,PrivateKey,[1,2],"private key");assert.optionalObject(m,"options");if(m===undefined){m={}}assert.optionalObject(m.validFrom,"options.validFrom");assert.optionalObject(m.validUntil,"options.validUntil");var n=m.validFrom;var r=m.validUntil;if(n===undefined){n=new Date()}if(r===undefined){assert.optionalNumber(m.lifetime,"options.lifetime");var v=m.lifetime;if(v===undefined){v=10*365*24*3600}r=new Date();r.setTime(r.getTime()+v*1000)}assert.optionalBuffer(m.serial,"options.serial");var x=m.serial;if(x===undefined){x=new Buffer("0000000000000001","hex")}var t=m.purposes;if(t===undefined){t=[]}if(t.indexOf("signature")===-1){t.push("signature")}if(t.indexOf("ca")===-1){t.push("ca")}if(t.indexOf("crl")===-1){t.push("crl")}if(t.length<=3){var p=q.filter(function(a){return(a.type==="host")});var s=q.filter(function(a){return(a.type==="user")});if(p.length>0){if(t.indexOf("serverAuth")===-1){t.push("serverAuth")}}if(s.length>0){if(t.indexOf("clientAuth")===-1){t.push("clientAuth")}}if(s.length>0||p.length>0){if(t.indexOf("keyAgreement")===-1){t.push("keyAgreement")}if(o.type==="rsa"&&t.indexOf("encryption")===-1){t.push("encryption")}}}var u=new Certificate({subjects:q,issuer:q[0],subjectKey:o.toPublic(),issuerKey:o.toPublic(),signatures:{},serial:x,validFrom:n,validUntil:r,purposes:t});u.signWith(o);return(u)};Certificate.create=function(z,q,t,u,o){var s;if(Array.isArray(z)){s=z}else{s=[z]}assert.arrayOfObject(s);s.forEach(function(a){utils.assertCompatible(a,Identity,[1,0],"subject")});utils.assertCompatible(q,Key,[1,0],"key");if(PrivateKey.isPrivateKey(q)){q=q.toPublic()}utils.assertCompatible(t,Identity,[1,0],"issuer");utils.assertCompatible(u,PrivateKey,[1,2],"issuer key");assert.optionalObject(o,"options");if(o===undefined){o={}}assert.optionalObject(o.validFrom,"options.validFrom");assert.optionalObject(o.validUntil,"options.validUntil");var p=o.validFrom;var v=o.validUntil;if(p===undefined){p=new Date()}if(v===undefined){assert.optionalNumber(o.lifetime,"options.lifetime");var A=o.lifetime;if(A===undefined){A=10*365*24*3600}v=new Date();v.setTime(v.getTime()+A*1000)}assert.optionalBuffer(o.serial,"options.serial");var B=o.serial;if(B===undefined){B=new Buffer("0000000000000001","hex")}var x=o.purposes;if(x===undefined){x=[]}if(x.indexOf("signature")===-1){x.push("signature")}if(o.ca===true){if(x.indexOf("ca")===-1){x.push("ca")}if(x.indexOf("crl")===-1){x.push("crl")}}var r=s.filter(function(a){return(a.type==="host")});var w=s.filter(function(a){return(a.type==="user")});if(r.length>0){if(x.indexOf("serverAuth")===-1){x.push("serverAuth")}}if(w.length>0){if(x.indexOf("clientAuth")===-1){x.push("clientAuth")}}if(w.length>0||r.length>0){if(x.indexOf("keyAgreement")===-1){x.push("keyAgreement")}if(q.type==="rsa"&&x.indexOf("encryption")===-1){x.push("encryption")}}var y=new Certificate({subjects:s,issuer:t,subjectKey:q,issuerKey:u.toPublic(),signatures:{},serial:B,validFrom:p,validUntil:v,purposes:x});y.signWith(u);return(y)};Certificate.parse=function(j,h,e){if(typeof(j)!=="string"){assert.buffer(j,"data")}if(h===undefined){h="auto"}assert.string(h,"format");if(typeof(e)==="string"){e={filename:e}}assert.optionalObject(e,"options");if(e===undefined){e={}}assert.optionalString(e.filename,"options.filename");if(e.filename===undefined){e.filename="(unnamed)"}assert.object(formats[h],"formats[format]");try{var g=formats[h].read(j,e);return(g)}catch(i){throw (new CertificateParseError(e.filename,h,i))}};Certificate.isCertificate=function(c,d){return(utils.isCompatible(c,Certificate,d))};Certificate.prototype._sshpkApiVersion=[1,0];Certificate._oldVersionDetect=function(b){return([1,0])};