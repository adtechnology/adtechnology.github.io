module.exports=Certificate;var assert=require("assert-plus");var algs=require("./algs");var crypto=require("crypto");var Fingerprint=require("./fingerprint");var Signature=require("./signature");var errs=require("./errors");var util=require("util");var utils=require("./utils");var Key=require("./key");var PrivateKey=require("./private-key");var Identity=require("./identity");var formats={};formats.openssh=require("./formats/openssh-cert");formats.x509=require("./formats/x509");formats.pem=require("./formats/x509-pem");var CertificateParseError=errs.CertificateParseError;var InvalidAlgorithmError=errs.InvalidAlgorithmError;function Certificate(a){assert.object(a,"options");assert.arrayOfObject(a.subjects,"options.subjects");utils.assertCompatible(a.subjects[0],Identity,[1,0],"options.subjects");utils.assertCompatible(a.subjectKey,Key,[1,0],"options.subjectKey");utils.assertCompatible(a.issuer,Identity,[1,0],"options.issuer");if(a.issuerKey!==undefined){utils.assertCompatible(a.issuerKey,Key,[1,0],"options.issuerKey")}assert.object(a.signatures,"options.signatures");assert.buffer(a.serial,"options.serial");assert.date(a.validFrom,"options.validFrom");assert.date(a.validUntil,"optons.validUntil");assert.optionalArrayOfString(a.purposes,"options.purposes");this._hashCache={};this.subjects=a.subjects;this.issuer=a.issuer;this.subjectKey=a.subjectKey;this.issuerKey=a.issuerKey;this.signatures=a.signatures;this.serial=a.serial;this.validFrom=a.validFrom;this.validUntil=a.validUntil;this.purposes=a.purposes}Certificate.formats=formats;Certificate.prototype.toBuffer=function(b,a){if(b===undefined){b="x509"}assert.string(b,"format");assert.object(formats[b],"formats[format]");assert.optionalObject(a,"options");return(formats[b].write(this,a))};Certificate.prototype.toString=function(b,a){if(b===undefined){b="pem"}return(this.toBuffer(b,a).toString())};Certificate.prototype.fingerprint=function(b){if(b===undefined){b="sha256"}assert.string(b,"algorithm");var a={type:"certificate",hash:this.hash(b),algorithm:b};return(new Fingerprint(a))};Certificate.prototype.hash=function(b){assert.string(b,"algorithm");b=b.toLowerCase();if(algs.hashAlgs[b]===undefined){throw (new InvalidAlgorithmError(b))}if(this._hashCache[b]){return(this._hashCache[b])}var a=crypto.createHash(b).update(this.toBuffer("x509")).digest();this._hashCache[b]=a;return(a)};Certificate.prototype.isExpired=function(a){if(a===undefined){a=new Date()}return(!((a.getTime()>=this.validFrom.getTime())&&(a.getTime()<this.validUntil.getTime())))};Certificate.prototype.isSignedBy=function(a){utils.assertCompatible(a,Certificate,[1,0],"issuer");if(!this.issuer.equals(a.subjects[0])){return(false)}if(this.issuer.purposes&&this.issuer.purposes.length>0&&this.issuer.purposes.indexOf("ca")===-1){return(false)}return(this.isSignedByKey(a.subjectKey))};Certificate.prototype.isSignedByKey=function(c){utils.assertCompatible(c,Key,[1,2],"issuerKey");if(this.issuerKey!==undefined){return(this.issuerKey.fingerprint("sha512").matches(c))}var a=Object.keys(this.signatures)[0];var b=formats[a].verify(this,c);if(b){this.issuerKey=c}return(b)};Certificate.prototype.signWith=function(e){utils.assertCompatible(e,PrivateKey,[1,2],"key");var b=Object.keys(formats);var a=false;for(var d=0;d<b.length;++d){if(b[d]!=="pem"){var c=formats[b[d]].sign(this,e);if(c===true){a=true}}}if(!a){throw (new Error("Failed to sign the certificate for any available certificate formats"))}};Certificate.createSelfSigned=function(b,j,l){var h;if(Array.isArray(b)){h=b}else{h=[b]}assert.arrayOfObject(h);h.forEach(function(m){utils.assertCompatible(m,Identity,[1,0],"subject")});utils.assertCompatible(j,PrivateKey,[1,2],"private key");assert.optionalObject(l,"options");if(l===undefined){l={}}assert.optionalObject(l.validFrom,"options.validFrom");assert.optionalObject(l.validUntil,"options.validUntil");var k=l.validFrom;var g=l.validUntil;if(k===undefined){k=new Date()}if(g===undefined){assert.optionalNumber(l.lifetime,"options.lifetime");var c=l.lifetime;if(c===undefined){c=10*365*24*3600}g=new Date();g.setTime(g.getTime()+c*1000)}assert.optionalBuffer(l.serial,"options.serial");var a=l.serial;if(a===undefined){a=new Buffer("0000000000000001","hex")}var e=l.purposes;if(e===undefined){e=[]}if(e.indexOf("signature")===-1){e.push("signature")}if(e.indexOf("ca")===-1){e.push("ca")}if(e.indexOf("crl")===-1){e.push("crl")}if(e.length<=3){var i=h.filter(function(m){return(m.type==="host")});var f=h.filter(function(m){return(m.type==="user")});if(i.length>0){if(e.indexOf("serverAuth")===-1){e.push("serverAuth")}}if(f.length>0){if(e.indexOf("clientAuth")===-1){e.push("clientAuth")}}if(f.length>0||i.length>0){if(e.indexOf("keyAgreement")===-1){e.push("keyAgreement")}if(j.type==="rsa"&&e.indexOf("encryption")===-1){e.push("encryption")}}}var d=new Certificate({subjects:h,issuer:h[0],subjectKey:j.toPublic(),issuerKey:j.toPublic(),signatures:{},serial:a,validFrom:k,validUntil:g,purposes:e});d.signWith(j);return(d)};Certificate.create=function(c,l,i,h,n){var j;if(Array.isArray(c)){j=c}else{j=[c]}assert.arrayOfObject(j);j.forEach(function(o){utils.assertCompatible(o,Identity,[1,0],"subject")});utils.assertCompatible(l,Key,[1,0],"key");if(PrivateKey.isPrivateKey(l)){l=l.toPublic()}utils.assertCompatible(i,Identity,[1,0],"issuer");utils.assertCompatible(h,PrivateKey,[1,2],"issuer key");assert.optionalObject(n,"options");if(n===undefined){n={}}assert.optionalObject(n.validFrom,"options.validFrom");assert.optionalObject(n.validUntil,"options.validUntil");var m=n.validFrom;var g=n.validUntil;if(m===undefined){m=new Date()}if(g===undefined){assert.optionalNumber(n.lifetime,"options.lifetime");var b=n.lifetime;if(b===undefined){b=10*365*24*3600}g=new Date();g.setTime(g.getTime()+b*1000)}assert.optionalBuffer(n.serial,"options.serial");var a=n.serial;if(a===undefined){a=new Buffer("0000000000000001","hex")}var e=n.purposes;if(e===undefined){e=[]}if(e.indexOf("signature")===-1){e.push("signature")}if(n.ca===true){if(e.indexOf("ca")===-1){e.push("ca")}if(e.indexOf("crl")===-1){e.push("crl")}}var k=j.filter(function(o){return(o.type==="host")});var f=j.filter(function(o){return(o.type==="user")});if(k.length>0){if(e.indexOf("serverAuth")===-1){e.push("serverAuth")}}if(f.length>0){if(e.indexOf("clientAuth")===-1){e.push("clientAuth")}}if(f.length>0||k.length>0){if(e.indexOf("keyAgreement")===-1){e.push("keyAgreement")}if(l.type==="rsa"&&e.indexOf("encryption")===-1){e.push("encryption")}}var d=new Certificate({subjects:j,issuer:i,subjectKey:l,issuerKey:h.toPublic(),signatures:{},serial:a,validFrom:m,validUntil:g,purposes:e});d.signWith(h);return(d)};Certificate.parse=function(c,f,b){if(typeof(c)!=="string"){assert.buffer(c,"data")}if(f===undefined){f="auto"}assert.string(f,"format");if(typeof(b)==="string"){b={filename:b}}assert.optionalObject(b,"options");if(b===undefined){b={}}assert.optionalString(b.filename,"options.filename");if(b.filename===undefined){b.filename="(unnamed)"}assert.object(formats[f],"formats[format]");try{var a=formats[f].read(c,b);return(a)}catch(d){throw (new CertificateParseError(b.filename,f,d))}};Certificate.isCertificate=function(b,a){return(utils.isCompatible(b,Certificate,a))};Certificate.prototype._sshpkApiVersion=[1,0];Certificate._oldVersionDetect=function(a){return([1,0])};