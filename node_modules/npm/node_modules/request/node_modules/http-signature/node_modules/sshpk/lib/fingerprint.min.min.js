module.exports=Fingerprint;var assert=require("assert-plus");var algs=require("./algs");var crypto=require("crypto");var errs=require("./errors");var Key=require("./key");var Certificate=require("./certificate");var utils=require("./utils");var FingerprintFormatError=errs.FingerprintFormatError;var InvalidAlgorithmError=errs.InvalidAlgorithmError;function Fingerprint(b){assert.object(b,"options");assert.string(b.type,"options.type");assert.buffer(b.hash,"options.hash");assert.string(b.algorithm,"options.algorithm");this.algorithm=b.algorithm.toLowerCase();if(algs.hashAlgs[this.algorithm]!==true){throw (new InvalidAlgorithmError(this.algorithm))}this.hash=b.hash;this.type=b.type}Fingerprint.prototype.toString=function(b){if(b===undefined){if(this.algorithm==="md5"){b="hex"}else{b="base64"}}assert.string(b);switch(b){case"hex":return(addColons(this.hash.toString("hex")));case"base64":return(sshBase64Format(this.algorithm,this.hash.toString("base64")));default:throw (new FingerprintFormatError(undefined,b))}};Fingerprint.prototype.matches=function(e){assert.object(e,"key or certificate");if(this.type==="key"){utils.assertCompatible(e,Key,[1,0],"key")}else{utils.assertCompatible(e,Certificate,[1,0],"certificate")}var d=e.hash(this.algorithm);var f=crypto.createHash(this.algorithm).update(d).digest("base64");if(this.hash2===undefined){this.hash2=crypto.createHash(this.algorithm).update(this.hash).digest("base64")}return(this.hash2===f)};Fingerprint.parse=function(k,e){assert.string(k,"fingerprint");var r,m,q;if(Array.isArray(e)){q=e;e={}}assert.optionalObject(e,"options");if(e===undefined){e={}}if(e.enAlgs!==undefined){q=e.enAlgs}assert.optionalArrayOfString(q,"algorithms");var o=k.split(":");if(o.length==2){r=o[0].toLowerCase();var p=/^[A-Za-z0-9+\/=]+$/;if(!p.test(o[1])){throw (new FingerprintFormatError(k))}try{m=new Buffer(o[1],"base64")}catch(l){throw (new FingerprintFormatError(k))}}else{if(o.length>2){r="md5";if(o[0].toLowerCase()==="md5"){o=o.slice(1)}o=o.join("");var n=/^[a-fA-F0-9]+$/;if(!n.test(o)){throw (new FingerprintFormatError(k))}try{m=new Buffer(o,"hex")}catch(l){throw (new FingerprintFormatError(k))}}}if(r===undefined){throw (new FingerprintFormatError(k))}if(algs.hashAlgs[r]===undefined){throw (new InvalidAlgorithmError(r))}if(q!==undefined){q=q.map(function(a){return a.toLowerCase()});if(q.indexOf(r)===-1){throw (new InvalidAlgorithmError(r))}}return(new Fingerprint({algorithm:r,hash:m,type:e.type||"key"}))};function addColons(b){return(b.replace(/(.{2})(?=.)/g,"$1:"))}function base64Strip(b){return(b.replace(/=*$/,""))}function sshBase64Format(c,d){return(c.toUpperCase()+":"+base64Strip(d))}Fingerprint.isFingerprint=function(c,d){return(utils.isCompatible(c,Fingerprint,d))};Fingerprint.prototype._sshpkApiVersion=[1,1];Fingerprint._oldVersionDetect=function(b){assert.func(b.toString);assert.func(b.matches);return([1,0])};