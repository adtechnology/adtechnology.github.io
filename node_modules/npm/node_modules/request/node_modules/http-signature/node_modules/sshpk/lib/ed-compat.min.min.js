module.exports={Verifier:Verifier,Signer:Signer};var nacl;var stream=require("stream");var util=require("util");var assert=require("assert-plus");var Signature=require("./signature");function Verifier(d,c){if(nacl===undefined){nacl=require("tweetnacl")}if(c.toLowerCase()!=="sha512"){throw (new Error("ED25519 only supports the use of SHA-512 hashes"))}this.key=d;this.chunks=[];stream.Writable.call(this,{})}util.inherits(Verifier,stream.Writable);Verifier.prototype._write=function(f,d,e){this.chunks.push(f);e()};Verifier.prototype.update=function(b){if(typeof(b)==="string"){b=new Buffer(b,"binary")}this.chunks.push(b)};Verifier.prototype.verify=function(d,e){var f;if(Signature.isSignature(d,[2,0])){if(d.type!=="ed25519"){return(false)}f=d.toBuffer("raw")}else{if(typeof(d)==="string"){f=new Buffer(d,"base64")}else{if(Signature.isSignature(d,[1,0])){throw (new Error("signature was created by too old a version of sshpk and cannot be verified"))}}}assert.buffer(f);return(nacl.sign.detached.verify(new Uint8Array(Buffer.concat(this.chunks)),new Uint8Array(f),new Uint8Array(this.key.part.A.data)))};function Signer(d,c){if(nacl===undefined){nacl=require("tweetnacl")}if(c.toLowerCase()!=="sha512"){throw (new Error("ED25519 only supports the use of SHA-512 hashes"))}this.key=d;this.chunks=[];stream.Writable.call(this,{})}util.inherits(Signer,stream.Writable);Signer.prototype._write=function(f,d,e){this.chunks.push(f);e()};Signer.prototype.update=function(b){if(typeof(b)==="string"){b=new Buffer(b,"binary")}this.chunks.push(b)};Signer.prototype.sign=function(){var f=nacl.sign.detached(new Uint8Array(Buffer.concat(this.chunks)),new Uint8Array(Buffer.concat([this.key.part.k.data,this.key.part.A.data])));var d=new Buffer(f);var e=Signature.parse(d,"ed25519","raw");e.hashAlgorithm="sha512";return(e)};