module.exports=Certificate;var assert=require("assert-plus");var algs=require("./algs");var crypto=require("crypto");var Fingerprint=require("./fingerprint");var Signature=require("./signature");var errs=require("./errors");var util=require("util");var utils=require("./utils");var Key=require("./key");var PrivateKey=require("./private-key");var Identity=require("./identity");var formats={};formats.openssh=require("./formats/openssh-cert");formats.x509=require("./formats/x509");formats.pem=require("./formats/x509-pem");var CertificateParseError=errs.CertificateParseError;var InvalidAlgorithmError=errs.InvalidAlgorithmError;function Certificate(a){assert.object(a,"options");assert.arrayOfObject(a.subjects,"options.subjects");utils.assertCompatible(a.subjects[0],Identity,[1,0],"options.subjects");utils.assertCompatible(a.subjectKey,Key,[1,0],"options.subjectKey");utils.assertCompatible(a.issuer,Identity,[1,0],"options.issuer");if(a.issuerKey!==undefined){utils.assertCompatible(a.issuerKey,Key,[1,0],"options.issuerKey")}assert.object(a.signatures,"options.signatures");assert.buffer(a.serial,"options.serial");assert.date(a.validFrom,"options.validFrom");assert.date(a.validUntil,"optons.validUntil");assert.optionalArrayOfString(a.purposes,"options.purposes");this._hashCache={};this.subjects=a.subjects;this.issuer=a.issuer;this.subjectKey=a.subjectKey;this.issuerKey=a.issuerKey;this.signatures=a.signatures;this.serial=a.serial;this.validFrom=a.validFrom;this.validUntil=a.validUntil;this.purposes=a.purposes}Certificate.formats=formats;Certificate.prototype.toBuffer=function(b,a){if(b===undefined){b="x509"}assert.string(b,"format");assert.object(formats[b],"formats[format]");assert.optionalObject(a,"options");return(formats[b].write(this,a))};Certificate.prototype.toString=function(b,a){if(b===undefined){b="pem"}return(this.toBuffer(b,a).toString())};Certificate.prototype.fingerprint=function(b){if(b===undefined){b="sha256"}assert.string(b,"algorithm");var a={type:"certificate",hash:this.hash(b),algorithm:b};return(new Fingerprint(a))};Certificate.prototype.hash=function(b){assert.string(b,"algorithm");b=b.toLowerCase();if(algs.hashAlgs[b]===undefined){throw (new InvalidAlgorithmError(b))}if(this._hashCache[b]){return(this._hashCache[b])}var a=crypto.createHash(b).update(this.toBuffer("x509")).digest();this._hashCache[b]=a;return(a)};Certificate.prototype.isExpired=function(a){if(a===undefined){a=new Date()}return(!((a.getTime()>=this.validFrom.getTime())&&(a.getTime()<this.validUntil.getTime())))};Certificate.prototype.isSignedBy=function(a){utils.assertCompatible(a,Certificate,[1,0],"issuer");if(!this.issuer.equals(a.subjects[0])){return(false)}if(this.issuer.purposes&&this.issuer.purposes.length>0&&this.issuer.purposes.indexOf("ca")===-1){return(false)}return(this.isSignedByKey(a.subjectKey))};Certificate.prototype.isSignedByKey=function(a){utils.assertCompatible(a,Key,[1,2],"issuerKey");if(this.issuerKey!==undefined){return(this.issuerKey.fingerprint("sha512").matches(a))}var b=Object.keys(this.signatures)[0];var c=formats[b].verify(this,a);if(c){this.issuerKey=a}return(c)};Certificate.prototype.signWith=function(c){utils.assertCompatible(c,PrivateKey,[1,2],"key");var e=Object.keys(formats);var d=false;for(var b=0;b<e.length;++b){if(e[b]!=="pem"){var a=formats[e[b]].sign(this,c);if(a===true){d=true}}}if(!d){throw (new Error("Failed to sign the certificate for any available certificate formats"))}};Certificate.createSelfSigned=function(h,d,f){var b;if(Array.isArray(h)){b=h}else{b=[h]}assert.arrayOfObject(b);b.forEach(function(m){utils.assertCompatible(m,Identity,[1,0],"subject")});utils.assertCompatible(d,PrivateKey,[1,2],"private key");assert.optionalObject(f,"options");if(f===undefined){f={}}assert.optionalObject(f.validFrom,"options.validFrom");assert.optionalObject(f.validUntil,"options.validUntil");var e=f.validFrom;var a=f.validUntil;if(e===undefined){e=new Date()}if(a===undefined){assert.optionalNumber(f.lifetime,"options.lifetime");var i=f.lifetime;if(i===undefined){i=10*365*24*3600}a=new Date();a.setTime(a.getTime()+i*1000)}assert.optionalBuffer(f.serial,"options.serial");var g=f.serial;if(g===undefined){g=new Buffer("0000000000000001","hex")}var k=f.purposes;if(k===undefined){k=[]}if(k.indexOf("signature")===-1){k.push("signature")}if(k.indexOf("ca")===-1){k.push("ca")}if(k.indexOf("crl")===-1){k.push("crl")}if(k.length<=3){var c=b.filter(function(m){return(m.type==="host")});var l=b.filter(function(m){return(m.type==="user")});if(c.length>0){if(k.indexOf("serverAuth")===-1){k.push("serverAuth")}}if(l.length>0){if(k.indexOf("clientAuth")===-1){k.push("clientAuth")}}if(l.length>0||c.length>0){if(k.indexOf("keyAgreement")===-1){k.push("keyAgreement")}if(d.type==="rsa"&&k.indexOf("encryption")===-1){k.push("encryption")}}}var j=new Certificate({subjects:b,issuer:b[0],subjectKey:d.toPublic(),issuerKey:d.toPublic(),signatures:{},serial:g,validFrom:e,validUntil:a,purposes:k});j.signWith(d);return(j)};Certificate.create=function(g,b,m,l,f){var n;if(Array.isArray(g)){n=g}else{n=[g]}assert.arrayOfObject(n);n.forEach(function(o){utils.assertCompatible(o,Identity,[1,0],"subject")});utils.assertCompatible(b,Key,[1,0],"key");if(PrivateKey.isPrivateKey(b)){b=b.toPublic()}utils.assertCompatible(m,Identity,[1,0],"issuer");utils.assertCompatible(l,PrivateKey,[1,2],"issuer key");assert.optionalObject(f,"options");if(f===undefined){f={}}assert.optionalObject(f.validFrom,"options.validFrom");assert.optionalObject(f.validUntil,"options.validUntil");var d=f.validFrom;var k=f.validUntil;if(d===undefined){d=new Date()}if(k===undefined){assert.optionalNumber(f.lifetime,"options.lifetime");var e=f.lifetime;if(e===undefined){e=10*365*24*3600}k=new Date();k.setTime(k.getTime()+e*1000)}assert.optionalBuffer(f.serial,"options.serial");var c=f.serial;if(c===undefined){c=new Buffer("0000000000000001","hex")}var i=f.purposes;if(i===undefined){i=[]}if(i.indexOf("signature")===-1){i.push("signature")}if(f.ca===true){if(i.indexOf("ca")===-1){i.push("ca")}if(i.indexOf("crl")===-1){i.push("crl")}}var a=n.filter(function(o){return(o.type==="host")});var j=n.filter(function(o){return(o.type==="user")});if(a.length>0){if(i.indexOf("serverAuth")===-1){i.push("serverAuth")}}if(j.length>0){if(i.indexOf("clientAuth")===-1){i.push("clientAuth")}}if(j.length>0||a.length>0){if(i.indexOf("keyAgreement")===-1){i.push("keyAgreement")}if(b.type==="rsa"&&i.indexOf("encryption")===-1){i.push("encryption")}}var h=new Certificate({subjects:n,issuer:m,subjectKey:b,issuerKey:l.toPublic(),signatures:{},serial:c,validFrom:d,validUntil:k,purposes:i});h.signWith(l);return(h)};Certificate.parse=function(a,c,f){if(typeof(a)!=="string"){assert.buffer(a,"data")}if(c===undefined){c="auto"}assert.string(c,"format");if(typeof(f)==="string"){f={filename:f}}assert.optionalObject(f,"options");if(f===undefined){f={}}assert.optionalString(f.filename,"options.filename");if(f.filename===undefined){f.filename="(unnamed)"}assert.object(formats[c],"formats[format]");try{var d=formats[c].read(a,f);return(d)}catch(b){throw (new CertificateParseError(f.filename,c,b))}};Certificate.isCertificate=function(b,a){return(utils.isCompatible(b,Certificate,a))};Certificate.prototype._sshpkApiVersion=[1,0];Certificate._oldVersionDetect=function(a){return([1,0])};