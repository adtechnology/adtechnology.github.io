module.exports={read:read,write:write};var assert=require("assert-plus");var utils=require("../utils");var Key=require("../key");var PrivateKey=require("../private-key");var pem=require("./pem");var ssh=require("./ssh");var rfc4253=require("./rfc4253");var dnssec=require("./dnssec");var DNSSEC_PRIVKEY_HEADER_PREFIX="Private-key-format: v1";function read(c,d){if(typeof(c)==="string"){if(c.trim().match(/^[-]+[ ]*BEGIN/)){return(pem.read(c,d))}if(c.match(/^\s*ssh-[a-z]/)){return(ssh.read(c,d))}if(c.match(/^\s*ecdsa-/)){return(ssh.read(c,d))}if(findDNSSECHeader(c)){return(dnssec.read(c,d))}c=new Buffer(c,"binary")}else{assert.buffer(c);if(findPEMHeader(c)){return(pem.read(c,d))}if(findSSHHeader(c)){return(ssh.read(c,d))}if(findDNSSECHeader(c)){return(dnssec.read(c,d))}}if(c.readUInt32BE(0)<c.length){return(rfc4253.read(c,d))}throw (new Error("Failed to auto-detect format of key"))}function findSSHHeader(d){var c=0;while(c<d.length&&(d[c]===32||d[c]===10||d[c]===9)){++c}if(c+4<=d.length&&d.slice(c,c+4).toString("ascii")==="ssh-"){return(true)}if(c+6<=d.length&&d.slice(c,c+6).toString("ascii")==="ecdsa-"){return(true)}return(false)}function findPEMHeader(d){var c=0;while(c<d.length&&(d[c]===32||d[c]===10)){++c}if(d[c]!==45){return(false)}while(c<d.length&&(d[c]===45)){++c}while(c<d.length&&(d[c]===32)){++c}if(c+5>d.length||d.slice(c,c+5).toString("ascii")!=="BEGIN"){return(false)}return(true)}function findDNSSECHeader(h){if(h.length<=DNSSEC_PRIVKEY_HEADER_PREFIX.length){return(false)}var g=h.slice(0,DNSSEC_PRIVKEY_HEADER_PREFIX.length);if(g.toString("ascii")===DNSSEC_PRIVKEY_HEADER_PREFIX){return(true)}if(typeof(h)!=="string"){h=h.toString("ascii")}var e=h.split("\n");var f=0;while(e[f].match(/^\;/)){f++}if(e[f].toString("ascii").match(/\. IN KEY /)){return(true)}if(e[f].toString("ascii").match(/\. IN DNSKEY /)){return(true)}return(false)}function write(c,d){throw (new Error('"auto" format cannot be used for writing'))};