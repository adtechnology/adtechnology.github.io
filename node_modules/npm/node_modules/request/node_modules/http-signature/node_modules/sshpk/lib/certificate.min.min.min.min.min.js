module.exports=Certificate;var assert=require("assert-plus");var algs=require("./algs");var crypto=require("crypto");var Fingerprint=require("./fingerprint");var Signature=require("./signature");var errs=require("./errors");var util=require("util");var utils=require("./utils");var Key=require("./key");var PrivateKey=require("./private-key");var Identity=require("./identity");var formats={};formats.openssh=require("./formats/openssh-cert");formats.x509=require("./formats/x509");formats.pem=require("./formats/x509-pem");var CertificateParseError=errs.CertificateParseError;var InvalidAlgorithmError=errs.InvalidAlgorithmError;function Certificate(a){assert.object(a,"options");assert.arrayOfObject(a.subjects,"options.subjects");utils.assertCompatible(a.subjects[0],Identity,[1,0],"options.subjects");utils.assertCompatible(a.subjectKey,Key,[1,0],"options.subjectKey");utils.assertCompatible(a.issuer,Identity,[1,0],"options.issuer");if(a.issuerKey!==undefined){utils.assertCompatible(a.issuerKey,Key,[1,0],"options.issuerKey")}assert.object(a.signatures,"options.signatures");assert.buffer(a.serial,"options.serial");assert.date(a.validFrom,"options.validFrom");assert.date(a.validUntil,"optons.validUntil");assert.optionalArrayOfString(a.purposes,"options.purposes");this._hashCache={};this.subjects=a.subjects;this.issuer=a.issuer;this.subjectKey=a.subjectKey;this.issuerKey=a.issuerKey;this.signatures=a.signatures;this.serial=a.serial;this.validFrom=a.validFrom;this.validUntil=a.validUntil;this.purposes=a.purposes}Certificate.formats=formats;Certificate.prototype.toBuffer=function(b,a){if(b===undefined){b="x509"}assert.string(b,"format");assert.object(formats[b],"formats[format]");assert.optionalObject(a,"options");return(formats[b].write(this,a))};Certificate.prototype.toString=function(b,a){if(b===undefined){b="pem"}return(this.toBuffer(b,a).toString())};Certificate.prototype.fingerprint=function(b){if(b===undefined){b="sha256"}assert.string(b,"algorithm");var a={type:"certificate",hash:this.hash(b),algorithm:b};return(new Fingerprint(a))};Certificate.prototype.hash=function(b){assert.string(b,"algorithm");b=b.toLowerCase();if(algs.hashAlgs[b]===undefined){throw (new InvalidAlgorithmError(b))}if(this._hashCache[b]){return(this._hashCache[b])}var a=crypto.createHash(b).update(this.toBuffer("x509")).digest();this._hashCache[b]=a;return(a)};Certificate.prototype.isExpired=function(a){if(a===undefined){a=new Date()}return(!((a.getTime()>=this.validFrom.getTime())&&(a.getTime()<this.validUntil.getTime())))};Certificate.prototype.isSignedBy=function(a){utils.assertCompatible(a,Certificate,[1,0],"issuer");if(!this.issuer.equals(a.subjects[0])){return(false)}if(this.issuer.purposes&&this.issuer.purposes.length>0&&this.issuer.purposes.indexOf("ca")===-1){return(false)}return(this.isSignedByKey(a.subjectKey))};Certificate.prototype.isSignedByKey=function(b){utils.assertCompatible(b,Key,[1,2],"issuerKey");if(this.issuerKey!==undefined){return(this.issuerKey.fingerprint("sha512").matches(b))}var c=Object.keys(this.signatures)[0];var a=formats[c].verify(this,b);if(a){this.issuerKey=b}return(a)};Certificate.prototype.signWith=function(a){utils.assertCompatible(a,PrivateKey,[1,2],"key");var c=Object.keys(formats);var b=false;for(var e=0;e<c.length;++e){if(c[e]!=="pem"){var d=formats[c[e]].sign(this,a);if(d===true){b=true}}}if(!b){throw (new Error("Failed to sign the certificate for any available certificate formats"))}};Certificate.createSelfSigned=function(b,j,l){var h;if(Array.isArray(b)){h=b}else{h=[b]}assert.arrayOfObject(h);h.forEach(function(m){utils.assertCompatible(m,Identity,[1,0],"subject")});utils.assertCompatible(j,PrivateKey,[1,2],"private key");assert.optionalObject(l,"options");if(l===undefined){l={}}assert.optionalObject(l.validFrom,"options.validFrom");assert.optionalObject(l.validUntil,"options.validUntil");var k=l.validFrom;var g=l.validUntil;if(k===undefined){k=new Date()}if(g===undefined){assert.optionalNumber(l.lifetime,"options.lifetime");var c=l.lifetime;if(c===undefined){c=10*365*24*3600}g=new Date();g.setTime(g.getTime()+c*1000)}assert.optionalBuffer(l.serial,"options.serial");var a=l.serial;if(a===undefined){a=new Buffer("0000000000000001","hex")}var e=l.purposes;if(e===undefined){e=[]}if(e.indexOf("signature")===-1){e.push("signature")}if(e.indexOf("ca")===-1){e.push("ca")}if(e.indexOf("crl")===-1){e.push("crl")}if(e.length<=3){var i=h.filter(function(m){return(m.type==="host")});var f=h.filter(function(m){return(m.type==="user")});if(i.length>0){if(e.indexOf("serverAuth")===-1){e.push("serverAuth")}}if(f.length>0){if(e.indexOf("clientAuth")===-1){e.push("clientAuth")}}if(f.length>0||i.length>0){if(e.indexOf("keyAgreement")===-1){e.push("keyAgreement")}if(j.type==="rsa"&&e.indexOf("encryption")===-1){e.push("encryption")}}}var d=new Certificate({subjects:h,issuer:h[0],subjectKey:j.toPublic(),issuerKey:j.toPublic(),signatures:{},serial:a,validFrom:k,validUntil:g,purposes:e});d.signWith(j);return(d)};Certificate.create=function(k,f,d,b,j){var e;if(Array.isArray(k)){e=k}else{e=[k]}assert.arrayOfObject(e);e.forEach(function(o){utils.assertCompatible(o,Identity,[1,0],"subject")});utils.assertCompatible(f,Key,[1,0],"key");if(PrivateKey.isPrivateKey(f)){f=f.toPublic()}utils.assertCompatible(d,Identity,[1,0],"issuer");utils.assertCompatible(b,PrivateKey,[1,2],"issuer key");assert.optionalObject(j,"options");if(j===undefined){j={}}assert.optionalObject(j.validFrom,"options.validFrom");assert.optionalObject(j.validUntil,"options.validUntil");var h=j.validFrom;var a=j.validUntil;if(h===undefined){h=new Date()}if(a===undefined){assert.optionalNumber(j.lifetime,"options.lifetime");var i=j.lifetime;if(i===undefined){i=10*365*24*3600}a=new Date();a.setTime(a.getTime()+i*1000)}assert.optionalBuffer(j.serial,"options.serial");var g=j.serial;if(g===undefined){g=new Buffer("0000000000000001","hex")}var m=j.purposes;if(m===undefined){m=[]}if(m.indexOf("signature")===-1){m.push("signature")}if(j.ca===true){if(m.indexOf("ca")===-1){m.push("ca")}if(m.indexOf("crl")===-1){m.push("crl")}}var c=e.filter(function(o){return(o.type==="host")});var n=e.filter(function(o){return(o.type==="user")});if(c.length>0){if(m.indexOf("serverAuth")===-1){m.push("serverAuth")}}if(n.length>0){if(m.indexOf("clientAuth")===-1){m.push("clientAuth")}}if(n.length>0||c.length>0){if(m.indexOf("keyAgreement")===-1){m.push("keyAgreement")}if(f.type==="rsa"&&m.indexOf("encryption")===-1){m.push("encryption")}}var l=new Certificate({subjects:e,issuer:d,subjectKey:f,issuerKey:b.toPublic(),signatures:{},serial:g,validFrom:h,validUntil:a,purposes:m});l.signWith(b);return(l)};Certificate.parse=function(d,a,c){if(typeof(d)!=="string"){assert.buffer(d,"data")}if(a===undefined){a="auto"}assert.string(a,"format");if(typeof(c)==="string"){c={filename:c}}assert.optionalObject(c,"options");if(c===undefined){c={}}assert.optionalString(c.filename,"options.filename");if(c.filename===undefined){c.filename="(unnamed)"}assert.object(formats[a],"formats[format]");try{var b=formats[a].read(d,c);return(b)}catch(f){throw (new CertificateParseError(c.filename,a,f))}};Certificate.isCertificate=function(b,a){return(utils.isCompatible(b,Certificate,a))};Certificate.prototype._sshpkApiVersion=[1,0];Certificate._oldVersionDetect=function(a){return([1,0])};