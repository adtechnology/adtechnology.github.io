module.exports={read:read.bind(undefined,false,undefined),readType:read.bind(undefined,false),write:write,readPartial:read.bind(undefined,true),readInternal:read,keyTypeToAlg:keyTypeToAlg,algToKeyType:algToKeyType};var assert=require("assert-plus");var algs=require("../algs");var utils=require("../utils");var Key=require("../key");var PrivateKey=require("../private-key");var SSHBuffer=require("../ssh-buffer");function algToKeyType(a){assert.string(a);if(a==="ssh-dss"){return("dsa")}else{if(a==="ssh-rsa"){return("rsa")}else{if(a==="ssh-ed25519"){return("ed25519")}else{if(a==="ssh-curve25519"){return("curve25519")}else{if(a.match(/^ecdsa-sha2-/)){return("ecdsa")}else{throw (new Error("Unknown algorithm "+a))}}}}}}function keyTypeToAlg(a){assert.object(a);if(a.type==="dsa"){return("ssh-dss")}else{if(a.type==="rsa"){return("ssh-rsa")}else{if(a.type==="ed25519"){return("ssh-ed25519")}else{if(a.type==="curve25519"){return("ssh-curve25519")}else{if(a.type==="ecdsa"){return("ecdsa-sha2-"+a.part.curve.data.toString())}else{throw (new Error("Unknown key type "+a.type))}}}}}}function read(m,l,a,f){if(typeof(a)==="string"){a=new Buffer(a)}assert.buffer(a,"buf");var o={};var g=o.parts=[];var b=new SSHBuffer({buffer:a});var n=b.readString();assert.ok(!b.atEnd(),"key must have at least one part");o.type=algToKeyType(n);var d=algs.info[o.type].parts.length;if(l&&l==="private"){d=algs.privInfo[o.type].parts.length}while(!b.atEnd()&&g.length<d){g.push(b.readPart())}while(!m&&!b.atEnd()){g.push(b.readPart())}assert.ok(g.length>=1,"key must have at least one part");assert.ok(m||b.atEnd(),"leftover bytes at end of key");var k=Key;var c=algs.info[o.type];if(l==="private"||c.parts.length!==g.length){c=algs.privInfo[o.type];k=PrivateKey}assert.strictEqual(c.parts.length,g.length);if(o.type==="ecdsa"){var j=/^ecdsa-sha2-(.+)$/.exec(n);assert.ok(j!==null);assert.strictEqual(j[1],g[0].data.toString())}var r=true;for(var h=0;h<c.parts.length;++h){var q=g[h];q.name=c.parts[h];if(o.type==="ed25519"&&q.name==="k"){q.data=q.data.slice(0,32)}if(q.name!=="curve"&&c.normalize!==false){var e;if(o.type==="ed25519"){e=utils.zeroPadToLength(q.data,32)}else{e=utils.mpNormalize(q.data)}if(e.toString("binary")!==q.data.toString("binary")){q.data=e;r=false}}}if(r){o._rfc4253Cache=b.toBuffer()}if(m&&typeof(m)==="object"){m.remainder=b.remainder();m.consumed=b._offset}return(new k(o))}function write(g,e){assert.object(g);var c=keyTypeToAlg(g);var f;var b=algs.info[g.type];if(PrivateKey.isPrivateKey(g)){b=algs.privInfo[g.type]}var a=b.parts;var d=new SSHBuffer({});d.writeString(c);for(f=0;f<a.length;++f){var h=g.part[a[f]].data;if(b.normalize!==false){if(g.type==="ed25519"){h=utils.zeroPadToLength(h,32)}else{h=utils.mpNormalize(h)}}if(g.type==="ed25519"&&a[f]==="k"){h=Buffer.concat([h,g.part.A.data])}d.writeBuffer(h)}return(d.toBuffer())};