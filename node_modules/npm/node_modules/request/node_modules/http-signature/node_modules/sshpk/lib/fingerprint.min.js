module.exports=Fingerprint;var assert=require("assert-plus");var algs=require("./algs");var crypto=require("crypto");var errs=require("./errors");var Key=require("./key");var Certificate=require("./certificate");var utils=require("./utils");var FingerprintFormatError=errs.FingerprintFormatError;var InvalidAlgorithmError=errs.InvalidAlgorithmError;function Fingerprint(a){assert.object(a,"options");assert.string(a.type,"options.type");assert.buffer(a.hash,"options.hash");assert.string(a.algorithm,"options.algorithm");this.algorithm=a.algorithm.toLowerCase();if(algs.hashAlgs[this.algorithm]!==true){throw (new InvalidAlgorithmError(this.algorithm))}this.hash=a.hash;this.type=a.type}Fingerprint.prototype.toString=function(a){if(a===undefined){if(this.algorithm==="md5"){a="hex"}else{a="base64"}}assert.string(a);switch(a){case"hex":return(addColons(this.hash.toString("hex")));case"base64":return(sshBase64Format(this.algorithm,this.hash.toString("base64")));default:throw (new FingerprintFormatError(undefined,a))}};Fingerprint.prototype.matches=function(a){assert.object(a,"key or certificate");if(this.type==="key"){utils.assertCompatible(a,Key,[1,0],"key")}else{utils.assertCompatible(a,Certificate,[1,0],"certificate")}var b=a.hash(this.algorithm);var c=crypto.createHash(this.algorithm).update(b).digest("base64");if(this.hash2===undefined){this.hash2=crypto.createHash(this.algorithm).update(this.hash).digest("base64")}return(this.hash2===c)};Fingerprint.parse=function(i,j){assert.string(i,"fingerprint");var a,g,b;if(Array.isArray(j)){b=j;j={}}assert.optionalObject(j,"options");if(j===undefined){j={}}if(j.enAlgs!==undefined){b=j.enAlgs}assert.optionalArrayOfString(b,"algorithms");var d=i.split(":");if(d.length==2){a=d[0].toLowerCase();var c=/^[A-Za-z0-9+\/=]+$/;if(!c.test(d[1])){throw (new FingerprintFormatError(i))}try{g=new Buffer(d[1],"base64")}catch(h){throw (new FingerprintFormatError(i))}}else{if(d.length>2){a="md5";if(d[0].toLowerCase()==="md5"){d=d.slice(1)}d=d.join("");var f=/^[a-fA-F0-9]+$/;if(!f.test(d)){throw (new FingerprintFormatError(i))}try{g=new Buffer(d,"hex")}catch(h){throw (new FingerprintFormatError(i))}}}if(a===undefined){throw (new FingerprintFormatError(i))}if(algs.hashAlgs[a]===undefined){throw (new InvalidAlgorithmError(a))}if(b!==undefined){b=b.map(function(e){return e.toLowerCase()});if(b.indexOf(a)===-1){throw (new InvalidAlgorithmError(a))}}return(new Fingerprint({algorithm:a,hash:g,type:j.type||"key"}))};function addColons(a){return(a.replace(/(.{2})(?=.)/g,"$1:"))}function base64Strip(a){return(a.replace(/=*$/,""))}function sshBase64Format(b,a){return(b.toUpperCase()+":"+base64Strip(a))}Fingerprint.isFingerprint=function(b,a){return(utils.isCompatible(b,Fingerprint,a))};Fingerprint.prototype._sshpkApiVersion=[1,1];Fingerprint._oldVersionDetect=function(a){assert.func(a.toString);assert.func(a.matches);return([1,0])};