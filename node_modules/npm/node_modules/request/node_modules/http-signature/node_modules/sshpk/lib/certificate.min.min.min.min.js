module.exports=Certificate;var assert=require("assert-plus");var algs=require("./algs");var crypto=require("crypto");var Fingerprint=require("./fingerprint");var Signature=require("./signature");var errs=require("./errors");var util=require("util");var utils=require("./utils");var Key=require("./key");var PrivateKey=require("./private-key");var Identity=require("./identity");var formats={};formats.openssh=require("./formats/openssh-cert");formats.x509=require("./formats/x509");formats.pem=require("./formats/x509-pem");var CertificateParseError=errs.CertificateParseError;var InvalidAlgorithmError=errs.InvalidAlgorithmError;function Certificate(b){assert.object(b,"options");assert.arrayOfObject(b.subjects,"options.subjects");utils.assertCompatible(b.subjects[0],Identity,[1,0],"options.subjects");utils.assertCompatible(b.subjectKey,Key,[1,0],"options.subjectKey");utils.assertCompatible(b.issuer,Identity,[1,0],"options.issuer");if(b.issuerKey!==undefined){utils.assertCompatible(b.issuerKey,Key,[1,0],"options.issuerKey")}assert.object(b.signatures,"options.signatures");assert.buffer(b.serial,"options.serial");assert.date(b.validFrom,"options.validFrom");assert.date(b.validUntil,"optons.validUntil");assert.optionalArrayOfString(b.purposes,"options.purposes");this._hashCache={};this.subjects=b.subjects;this.issuer=b.issuer;this.subjectKey=b.subjectKey;this.issuerKey=b.issuerKey;this.signatures=b.signatures;this.serial=b.serial;this.validFrom=b.validFrom;this.validUntil=b.validUntil;this.purposes=b.purposes}Certificate.formats=formats;Certificate.prototype.toBuffer=function(c,d){if(c===undefined){c="x509"}assert.string(c,"format");assert.object(formats[c],"formats[format]");assert.optionalObject(d,"options");return(formats[c].write(this,d))};Certificate.prototype.toString=function(c,d){if(c===undefined){c="pem"}return(this.toBuffer(c,d).toString())};Certificate.prototype.fingerprint=function(c){if(c===undefined){c="sha256"}assert.string(c,"algorithm");var d={type:"certificate",hash:this.hash(c),algorithm:c};return(new Fingerprint(d))};Certificate.prototype.hash=function(c){assert.string(c,"algorithm");c=c.toLowerCase();if(algs.hashAlgs[c]===undefined){throw (new InvalidAlgorithmError(c))}if(this._hashCache[c]){return(this._hashCache[c])}var d=crypto.createHash(c).update(this.toBuffer("x509")).digest();this._hashCache[c]=d;return(d)};Certificate.prototype.isExpired=function(b){if(b===undefined){b=new Date()}return(!((b.getTime()>=this.validFrom.getTime())&&(b.getTime()<this.validUntil.getTime())))};Certificate.prototype.isSignedBy=function(b){utils.assertCompatible(b,Certificate,[1,0],"issuer");if(!this.issuer.equals(b.subjects[0])){return(false)}if(this.issuer.purposes&&this.issuer.purposes.length>0&&this.issuer.purposes.indexOf("ca")===-1){return(false)}return(this.isSignedByKey(b.subjectKey))};Certificate.prototype.isSignedByKey=function(e){utils.assertCompatible(e,Key,[1,2],"issuerKey");if(this.issuerKey!==undefined){return(this.issuerKey.fingerprint("sha512").matches(e))}var d=Object.keys(this.signatures)[0];var f=formats[d].verify(this,e);if(f){this.issuerKey=e}return(f)};Certificate.prototype.signWith=function(j){utils.assertCompatible(j,PrivateKey,[1,2],"key");var h=Object.keys(formats);var i=false;for(var f=0;f<h.length;++f){if(h[f]!=="pem"){var g=formats[h[f]].sign(this,j);if(g===true){i=true}}}if(!i){throw (new Error("Failed to sign the certificate for any available certificate formats"))}};Certificate.createSelfSigned=function(q,u,s){var w;if(Array.isArray(q)){w=q}else{w=[q]}assert.arrayOfObject(w);w.forEach(function(a){utils.assertCompatible(a,Identity,[1,0],"subject")});utils.assertCompatible(u,PrivateKey,[1,2],"private key");assert.optionalObject(s,"options");if(s===undefined){s={}}assert.optionalObject(s.validFrom,"options.validFrom");assert.optionalObject(s.validUntil,"options.validUntil");var t=s.validFrom;var x=s.validUntil;if(t===undefined){t=new Date()}if(x===undefined){assert.optionalNumber(s.lifetime,"options.lifetime");var p=s.lifetime;if(p===undefined){p=10*365*24*3600}x=new Date();x.setTime(x.getTime()+p*1000)}assert.optionalBuffer(s.serial,"options.serial");var r=s.serial;if(r===undefined){r=new Buffer("0000000000000001","hex")}var n=s.purposes;if(n===undefined){n=[]}if(n.indexOf("signature")===-1){n.push("signature")}if(n.indexOf("ca")===-1){n.push("ca")}if(n.indexOf("crl")===-1){n.push("crl")}if(n.length<=3){var v=w.filter(function(a){return(a.type==="host")});var m=w.filter(function(a){return(a.type==="user")});if(v.length>0){if(n.indexOf("serverAuth")===-1){n.push("serverAuth")}}if(m.length>0){if(n.indexOf("clientAuth")===-1){n.push("clientAuth")}}if(m.length>0||v.length>0){if(n.indexOf("keyAgreement")===-1){n.push("keyAgreement")}if(u.type==="rsa"&&n.indexOf("encryption")===-1){n.push("encryption")}}}var o=new Certificate({subjects:w,issuer:w[0],subjectKey:u.toPublic(),issuerKey:u.toPublic(),signatures:{},serial:r,validFrom:t,validUntil:x,purposes:n});o.signWith(u);return(o)};Certificate.create=function(v,A,p,q,w){var o;if(Array.isArray(v)){o=v}else{o=[v]}assert.arrayOfObject(o);o.forEach(function(a){utils.assertCompatible(a,Identity,[1,0],"subject")});utils.assertCompatible(A,Key,[1,0],"key");if(PrivateKey.isPrivateKey(A)){A=A.toPublic()}utils.assertCompatible(p,Identity,[1,0],"issuer");utils.assertCompatible(q,PrivateKey,[1,2],"issuer key");assert.optionalObject(w,"options");if(w===undefined){w={}}assert.optionalObject(w.validFrom,"options.validFrom");assert.optionalObject(w.validUntil,"options.validUntil");var y=w.validFrom;var r=w.validUntil;if(y===undefined){y=new Date()}if(r===undefined){assert.optionalNumber(w.lifetime,"options.lifetime");var x=w.lifetime;if(x===undefined){x=10*365*24*3600}r=new Date();r.setTime(r.getTime()+x*1000)}assert.optionalBuffer(w.serial,"options.serial");var z=w.serial;if(z===undefined){z=new Buffer("0000000000000001","hex")}var t=w.purposes;if(t===undefined){t=[]}if(t.indexOf("signature")===-1){t.push("signature")}if(w.ca===true){if(t.indexOf("ca")===-1){t.push("ca")}if(t.indexOf("crl")===-1){t.push("crl")}}var B=o.filter(function(a){return(a.type==="host")});var s=o.filter(function(a){return(a.type==="user")});if(B.length>0){if(t.indexOf("serverAuth")===-1){t.push("serverAuth")}}if(s.length>0){if(t.indexOf("clientAuth")===-1){t.push("clientAuth")}}if(s.length>0||B.length>0){if(t.indexOf("keyAgreement")===-1){t.push("keyAgreement")}if(A.type==="rsa"&&t.indexOf("encryption")===-1){t.push("encryption")}}var u=new Certificate({subjects:o,issuer:p,subjectKey:A,issuerKey:q.toPublic(),signatures:{},serial:z,validFrom:y,validUntil:r,purposes:t});u.signWith(q);return(u)};Certificate.parse=function(g,j,h){if(typeof(g)!=="string"){assert.buffer(g,"data")}if(j===undefined){j="auto"}assert.string(j,"format");if(typeof(h)==="string"){h={filename:h}}assert.optionalObject(h,"options");if(h===undefined){h={}}assert.optionalString(h.filename,"options.filename");if(h.filename===undefined){h.filename="(unnamed)"}assert.object(formats[j],"formats[format]");try{var i=formats[j].read(g,h);return(i)}catch(e){throw (new CertificateParseError(h.filename,j,e))}};Certificate.isCertificate=function(c,d){return(utils.isCompatible(c,Certificate,d))};Certificate.prototype._sshpkApiVersion=[1,0];Certificate._oldVersionDetect=function(b){return([1,0])};