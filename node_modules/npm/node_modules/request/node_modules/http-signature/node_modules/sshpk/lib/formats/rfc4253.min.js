module.exports={read:read.bind(undefined,false,undefined),readType:read.bind(undefined,false),write:write,readPartial:read.bind(undefined,true),readInternal:read,keyTypeToAlg:keyTypeToAlg,algToKeyType:algToKeyType};var assert=require("assert-plus");var algs=require("../algs");var utils=require("../utils");var Key=require("../key");var PrivateKey=require("../private-key");var SSHBuffer=require("../ssh-buffer");function algToKeyType(a){assert.string(a);if(a==="ssh-dss"){return("dsa")}else{if(a==="ssh-rsa"){return("rsa")}else{if(a==="ssh-ed25519"){return("ed25519")}else{if(a==="ssh-curve25519"){return("curve25519")}else{if(a.match(/^ecdsa-sha2-/)){return("ecdsa")}else{throw (new Error("Unknown algorithm "+a))}}}}}}function keyTypeToAlg(a){assert.object(a);if(a.type==="dsa"){return("ssh-dss")}else{if(a.type==="rsa"){return("ssh-rsa")}else{if(a.type==="ed25519"){return("ssh-ed25519")}else{if(a.type==="curve25519"){return("ssh-curve25519")}else{if(a.type==="ecdsa"){return("ecdsa-sha2-"+a.part.curve.data.toString())}else{throw (new Error("Unknown key type "+a.type))}}}}}}function read(m,l,c,r){if(typeof(c)==="string"){c=new Buffer(c)}assert.buffer(c,"buf");var n={};var g=n.parts=[];var d=new SSHBuffer({buffer:c});var a=d.readString();assert.ok(!d.atEnd(),"key must have at least one part");n.type=algToKeyType(a);var q=algs.info[n.type].parts.length;if(l&&l==="private"){q=algs.privInfo[n.type].parts.length}while(!d.atEnd()&&g.length<q){g.push(d.readPart())}while(!m&&!d.atEnd()){g.push(d.readPart())}assert.ok(g.length>=1,"key must have at least one part");assert.ok(m||d.atEnd(),"leftover bytes at end of key");var k=Key;var e=algs.info[n.type];if(l==="private"||e.parts.length!==g.length){e=algs.privInfo[n.type];k=PrivateKey}assert.strictEqual(e.parts.length,g.length);if(n.type==="ecdsa"){var j=/^ecdsa-sha2-(.+)$/.exec(a);assert.ok(j!==null);assert.strictEqual(j[1],g[0].data.toString())}var o=true;for(var h=0;h<e.parts.length;++h){var b=g[h];b.name=e.parts[h];if(n.type==="ed25519"&&b.name==="k"){b.data=b.data.slice(0,32)}if(b.name!=="curve"&&e.normalize!==false){var f;if(n.type==="ed25519"){f=utils.zeroPadToLength(b.data,32)}else{f=utils.mpNormalize(b.data)}if(f.toString("binary")!==b.data.toString("binary")){b.data=f;o=false}}}if(o){n._rfc4253Cache=d.toBuffer()}if(m&&typeof(m)==="object"){m.remainder=d.remainder();m.consumed=d._offset}return(new k(n))}function write(d,b){assert.object(d);var h=keyTypeToAlg(d);var c;var g=algs.info[d.type];if(PrivateKey.isPrivateKey(d)){g=algs.privInfo[d.type]}var f=g.parts;var a=new SSHBuffer({});a.writeString(h);for(c=0;c<f.length;++c){var e=d.part[f[c]].data;if(g.normalize!==false){if(d.type==="ed25519"){e=utils.zeroPadToLength(e,32)}else{e=utils.mpNormalize(e)}}if(d.type==="ed25519"&&f[c]==="k"){e=Buffer.concat([e,d.part.A.data])}a.writeBuffer(e)}return(a.toBuffer())};