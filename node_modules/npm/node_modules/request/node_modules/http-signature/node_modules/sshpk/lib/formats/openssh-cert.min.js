module.exports={read:read,verify:verify,sign:sign,signAsync:signAsync,write:write,fromBuffer:fromBuffer,toBuffer:toBuffer};var assert=require("assert-plus");var SSHBuffer=require("../ssh-buffer");var crypto=require("crypto");var algs=require("../algs");var Key=require("../key");var PrivateKey=require("../private-key");var Identity=require("../identity");var rfc4253=require("./rfc4253");var Signature=require("../signature");var utils=require("../utils");var Certificate=require("../certificate");function verify(b,a){return(false)}var TYPES={user:1,host:2};Object.keys(TYPES).forEach(function(a){TYPES[TYPES[a]]=a});var ECDSA_ALGO=/^ecdsa-sha2-([^@-]+)-cert-v01@openssh.com$/;function read(b,a){if(Buffer.isBuffer(b)){b=b.toString("ascii")}var d=b.trim().split(/[ \t\n]+/g);if(d.length<2||d.length>3){throw (new Error("Not a valid SSH certificate line"))}var e=d[0];var c=d[1];c=new Buffer(c,"base64");return(fromBuffer(c,e))}function fromBuffer(s,q,a){var g=new SSHBuffer({buffer:s});var n=g.readString();if(q!==undefined&&n!==q){throw (new Error("SSH certificate algorithm mismatch"))}if(q===undefined){q=n}var r={};r.signatures={};r.signatures.openssh={};r.signatures.openssh.nonce=g.readBuffer();var t={};var m=(t.parts=[]);t.type=getAlg(q);var e=algs.info[t.type].parts.length;while(m.length<e){m.push(g.readPart())}assert.ok(m.length>=1,"key must have at least one part");var j=algs.info[t.type];if(t.type==="ecdsa"){var u=ECDSA_ALGO.exec(q);assert.ok(u!==null);assert.strictEqual(u[1],m[0].data.toString())}for(var o=0;o<j.parts.length;++o){m[o].name=j.parts[o];if(m[o].name!=="curve"&&j.normalize!==false){var k=m[o];k.data=utils.mpNormalize(k.data)}}r.subjectKey=new Key(t);r.serial=g.readInt64();var c=TYPES[g.readInt()];assert.string(c,"valid cert type");r.signatures.openssh.keyId=g.readString();var b=[];var h=g.readBuffer();var d=new SSHBuffer({buffer:h});while(!d.atEnd()){b.push(d.readString())}if(b.length===0){b=["*"]}r.subjects=b.map(function(i){if(c==="user"){return(Identity.forUser(i))}else{if(c==="host"){return(Identity.forHost(i))}}throw (new Error("Unknown identity type "+c))});r.validFrom=int64ToDate(g.readInt64());r.validUntil=int64ToDate(g.readInt64());r.signatures.openssh.critical=g.readBuffer();r.signatures.openssh.exts=g.readBuffer();g.readBuffer();var l=g.readBuffer();r.issuerKey=rfc4253.read(l);r.issuer=Identity.forHost("**");var f=g.readBuffer();r.signatures.openssh.signature=Signature.parse(f,r.issuerKey.type,"ssh");if(a!==undefined){a.remainder=g.remainder();a.consumed=g._offset}return(new Certificate(r))}function int64ToDate(a){var b=a.readUInt32BE(0)*4294967296;b+=a.readUInt32BE(4);var c=new Date();c.setTime(b*1000);c.sourceInt64=a;return(c)}function dateToInt64(c){if(c.sourceInt64!==undefined){return(c.sourceInt64)}var d=Math.round(c.getTime()/1000);var e=Math.floor(d/4294967296);var b=Math.floor(d%4294967296);var a=new Buffer(8);a.writeUInt32BE(e,0);a.writeUInt32BE(b,4);return(a)}function sign(c,b){if(c.signatures.openssh===undefined){c.signatures.openssh={}}try{var a=toBuffer(c,true)}catch(f){delete (c.signatures.openssh);return(false)}var h=c.signatures.openssh;var d=undefined;if(b.type==="rsa"||b.type==="dsa"){d="sha1"}var g=b.createSign(d);g.write(a);h.signature=g.sign();return(true)}function signAsync(c,g,a){if(c.signatures.openssh===undefined){c.signatures.openssh={}}try{var b=toBuffer(c,true)}catch(d){delete (c.signatures.openssh);a(d);return}var f=c.signatures.openssh;g(b,function(i,h){if(i){a(i);return}try{h.toBuffer("ssh")}catch(j){a(j);return}f.signature=h;a()})}function write(d,c){if(c===undefined){c={}}var a=toBuffer(d);var b=getCertType(d.subjectKey)+" "+a.toString("base64");if(c.comment){b=b+" "+c.comment}return(b)}function toBuffer(d,a){assert.object(d.signatures.openssh,"signature for openssh format");var g=d.signatures.openssh;if(g.nonce===undefined){g.nonce=crypto.randomBytes(16)}var b=new SSHBuffer({});b.writeString(getCertType(d.subjectKey));b.writeBuffer(g.nonce);var c=d.subjectKey;var h=algs.info[c.type];h.parts.forEach(function(i){b.writePart(c.part[i])});b.writeInt64(d.serial);var f=d.subjects[0].type;assert.notStrictEqual(f,"unknown");d.subjects.forEach(function(i){assert.strictEqual(i.type,f)});f=TYPES[f];b.writeInt(f);if(g.keyId===undefined){g.keyId=d.subjects[0].type+"_"+(d.subjects[0].uid||d.subjects[0].hostname)}b.writeString(g.keyId);var e=new SSHBuffer({});d.subjects.forEach(function(i){if(f===TYPES.host){e.writeString(i.hostname)}else{if(f===TYPES.user){e.writeString(i.uid)}}});b.writeBuffer(e.toBuffer());b.writeInt64(dateToInt64(d.validFrom));b.writeInt64(dateToInt64(d.validUntil));if(g.critical===undefined){g.critical=new Buffer(0)}b.writeBuffer(g.critical);if(g.exts===undefined){g.exts=new Buffer(0)}b.writeBuffer(g.exts);b.writeBuffer(new Buffer(0));e=rfc4253.write(d.issuerKey);b.writeBuffer(e);if(!a){b.writeBuffer(g.signature.toBuffer("ssh"))}return(b.toBuffer())}function getAlg(a){if(a==="ssh-rsa-cert-v01@openssh.com"){return("rsa")}if(a==="ssh-dss-cert-v01@openssh.com"){return("dsa")}if(a.match(ECDSA_ALGO)){return("ecdsa")}if(a==="ssh-ed25519-cert-v01@openssh.com"){return("ed25519")}throw (new Error("Unsupported cert type "+a))}function getCertType(a){if(a.type==="rsa"){return("ssh-rsa-cert-v01@openssh.com")}if(a.type==="dsa"){return("ssh-dss-cert-v01@openssh.com")}if(a.type==="ecdsa"){return("ecdsa-sha2-"+a.curve+"-cert-v01@openssh.com")}if(a.type==="ed25519"){return("ssh-ed25519-cert-v01@openssh.com")}throw (new Error("Unsupported key type "+a.type))};