module.exports={Verifier:Verifier,Signer:Signer};var nacl;var stream=require("stream");var util=require("util");var assert=require("assert-plus");var Signature=require("./signature");function Verifier(a,b){if(nacl===undefined){nacl=require("tweetnacl")}if(b.toLowerCase()!=="sha512"){throw (new Error("ED25519 only supports the use of SHA-512 hashes"))}this.key=a;this.chunks=[];stream.Writable.call(this,{})}util.inherits(Verifier,stream.Writable);Verifier.prototype._write=function(c,b,a){this.chunks.push(c);a()};Verifier.prototype.update=function(a){if(typeof(a)==="string"){a=new Buffer(a,"binary")}this.chunks.push(a)};Verifier.prototype.verify=function(b,a){var c;if(Signature.isSignature(b,[2,0])){if(b.type!=="ed25519"){return(false)}c=b.toBuffer("raw")}else{if(typeof(b)==="string"){c=new Buffer(b,"base64")}else{if(Signature.isSignature(b,[1,0])){throw (new Error("signature was created by too old a version of sshpk and cannot be verified"))}}}assert.buffer(c);return(nacl.sign.detached.verify(new Uint8Array(Buffer.concat(this.chunks)),new Uint8Array(c),new Uint8Array(this.key.part.A.data)))};function Signer(a,b){if(nacl===undefined){nacl=require("tweetnacl")}if(b.toLowerCase()!=="sha512"){throw (new Error("ED25519 only supports the use of SHA-512 hashes"))}this.key=a;this.chunks=[];stream.Writable.call(this,{})}util.inherits(Signer,stream.Writable);Signer.prototype._write=function(c,b,a){this.chunks.push(c);a()};Signer.prototype.update=function(a){if(typeof(a)==="string"){a=new Buffer(a,"binary")}this.chunks.push(a)};Signer.prototype.sign=function(){var c=nacl.sign.detached(new Uint8Array(Buffer.concat(this.chunks)),new Uint8Array(Buffer.concat([this.key.part.k.data,this.key.part.A.data])));var b=new Buffer(c);var a=Signature.parse(b,"ed25519","raw");a.hashAlgorithm="sha512";return(a)};