var assert=require("assert");var Stream=require("stream").Stream;var util=require("util");var UUID_REGEXP=/^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$/;function _capitalize(b){return(b.charAt(0).toUpperCase()+b.slice(1))}function _toss(f,j,h,g,i){throw new assert.AssertionError({message:util.format("%s (%s) is required",f,j),actual:(i===undefined)?typeof(g):i(g),expected:j,operator:h||"===",stackStartFunction:_toss.caller})}function _getClass(b){return(Object.prototype.toString.call(b).slice(8,-1))}function noop(){}var types={bool:{check:function(b){return typeof(b)==="boolean"}},func:{check:function(b){return typeof(b)==="function"}},string:{check:function(b){return typeof(b)==="string"}},object:{check:function(b){return typeof(b)==="object"&&b!==null}},number:{check:function(b){return typeof(b)==="number"&&!isNaN(b)}},finite:{check:function(b){return typeof(b)==="number"&&!isNaN(b)&&isFinite(b)}},buffer:{check:function(b){return Buffer.isBuffer(b)},operator:"Buffer.isBuffer"},array:{check:function(b){return Array.isArray(b)},operator:"Array.isArray"},stream:{check:function(b){return b instanceof Stream},operator:"instanceof",actual:_getClass},date:{check:function(b){return b instanceof Date},operator:"instanceof",actual:_getClass},regexp:{check:function(b){return b instanceof RegExp},operator:"instanceof",actual:_getClass},uuid:{check:function(b){return typeof(b)==="string"&&UUID_REGEXP.test(b)},operator:"isUUID"}};function _setExports(d){var f=Object.keys(types);var e;if(process.env.NODE_NDEBUG){e=noop}else{e=function(b,a){if(!b){_toss(a,"true",b)}}}f.forEach(function(b){if(d){e[b]=noop;return}var a=types[b];e[b]=function(h,c){if(!a.check(h)){_toss(c,b,a.operator,h,a.actual)}}});f.forEach(function(c){var b="optional"+_capitalize(c);if(d){e[b]=noop;return}var a=types[c];e[b]=function(j,i){if(j===undefined||j===null){return}if(!a.check(j)){_toss(i,c,a.operator,j,a.actual)}}});f.forEach(function(h){var c="arrayOf"+_capitalize(h);if(d){e[c]=noop;return}var b=types[h];var a="["+h+"]";e[c]=function(l,g){if(!Array.isArray(l)){_toss(g,a,b.operator,l,b.actual)}var i;for(i=0;i<l.length;i++){if(!b.check(l[i])){_toss(g,a,b.operator,l,b.actual)}}}});f.forEach(function(h){var c="optionalArrayOf"+_capitalize(h);if(d){e[c]=noop;return}var b=types[h];var a="["+h+"]";e[c]=function(l,g){if(l===undefined||l===null){return}if(!Array.isArray(l)){_toss(g,a,b.operator,l,b.actual)}var i;for(i=0;i<l.length;i++){if(!b.check(l[i])){_toss(g,a,b.operator,l,b.actual)}}}});Object.keys(assert).forEach(function(a){if(a==="AssertionError"){e[a]=assert[a];return}if(d){e[a]=noop;return}e[a]=assert[a]});e._setExports=_setExports;return e}module.exports=_setExports(process.env.NODE_NDEBUG);