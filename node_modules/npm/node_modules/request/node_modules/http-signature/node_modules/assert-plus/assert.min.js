var assert=require("assert");var Stream=require("stream").Stream;var util=require("util");var UUID_REGEXP=/^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$/;function _capitalize(a){return(a.charAt(0).toUpperCase()+a.slice(1))}function _toss(b,c,e,a,d){throw new assert.AssertionError({message:util.format("%s (%s) is required",b,c),actual:(d===undefined)?typeof(a):d(a),expected:c,operator:e||"===",stackStartFunction:_toss.caller})}function _getClass(a){return(Object.prototype.toString.call(a).slice(8,-1))}function noop(){}var types={bool:{check:function(a){return typeof(a)==="boolean"}},func:{check:function(a){return typeof(a)==="function"}},string:{check:function(a){return typeof(a)==="string"}},object:{check:function(a){return typeof(a)==="object"&&a!==null}},number:{check:function(a){return typeof(a)==="number"&&!isNaN(a)}},finite:{check:function(a){return typeof(a)==="number"&&!isNaN(a)&&isFinite(a)}},buffer:{check:function(a){return Buffer.isBuffer(a)},operator:"Buffer.isBuffer"},array:{check:function(a){return Array.isArray(a)},operator:"Array.isArray"},stream:{check:function(a){return a instanceof Stream},operator:"instanceof",actual:_getClass},date:{check:function(a){return a instanceof Date},operator:"instanceof",actual:_getClass},regexp:{check:function(a){return a instanceof RegExp},operator:"instanceof",actual:_getClass},uuid:{check:function(a){return typeof(a)==="string"&&UUID_REGEXP.test(a)},operator:"isUUID"}};function _setExports(b){var c=Object.keys(types);var a;if(process.env.NODE_NDEBUG){a=noop}else{a=function(d,e){if(!d){_toss(e,"true",d)}}}c.forEach(function(d){if(b){a[d]=noop;return}var e=types[d];a[d]=function(f,g){if(!e.check(f)){_toss(g,d,e.operator,f,e.actual)}}});c.forEach(function(d){var e="optional"+_capitalize(d);if(b){a[e]=noop;return}var f=types[d];a[e]=function(g,h){if(g===undefined||g===null){return}if(!f.check(g)){_toss(h,d,f.operator,g,f.actual)}}});c.forEach(function(d){var e="arrayOf"+_capitalize(d);if(b){a[e]=noop;return}var f=types[d];var g="["+d+"]";a[e]=function(h,k){if(!Array.isArray(h)){_toss(k,g,f.operator,h,f.actual)}var j;for(j=0;j<h.length;j++){if(!f.check(h[j])){_toss(k,g,f.operator,h,f.actual)}}}});c.forEach(function(d){var e="optionalArrayOf"+_capitalize(d);if(b){a[e]=noop;return}var f=types[d];var g="["+d+"]";a[e]=function(h,k){if(h===undefined||h===null){return}if(!Array.isArray(h)){_toss(k,g,f.operator,h,f.actual)}var j;for(j=0;j<h.length;j++){if(!f.check(h[j])){_toss(k,g,f.operator,h,f.actual)}}}});Object.keys(assert).forEach(function(d){if(d==="AssertionError"){a[d]=assert[d];return}if(b){a[d]=noop;return}a[d]=assert[d]});a._setExports=_setExports;return a}module.exports=_setExports(process.env.NODE_NDEBUG);