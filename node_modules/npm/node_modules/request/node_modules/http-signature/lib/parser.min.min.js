var assert=require("assert-plus");var util=require("util");var utils=require("./utils");var HASH_ALGOS=utils.HASH_ALGOS;var PK_ALGOS=utils.PK_ALGOS;var HttpSignatureError=utils.HttpSignatureError;var InvalidAlgorithmError=utils.InvalidAlgorithmError;var validateAlgorithm=utils.validateAlgorithm;var State={New:0,Params:1};var ParamsState={Name:0,Quote:1,Value:2,Comma:3};function ExpiredRequestError(b){HttpSignatureError.call(this,b,ExpiredRequestError)}util.inherits(ExpiredRequestError,HttpSignatureError);function InvalidHeaderError(b){HttpSignatureError.call(this,b,InvalidHeaderError)}util.inherits(InvalidHeaderError,HttpSignatureError);function InvalidParamsError(b){HttpSignatureError.call(this,b,InvalidParamsError)}util.inherits(InvalidParamsError,HttpSignatureError);function MissingHeaderError(b){HttpSignatureError.call(this,b,MissingHeaderError)}util.inherits(MissingHeaderError,HttpSignatureError);function StrictParsingError(b){HttpSignatureError.call(this,b,StrictParsingError)}util.inherits(StrictParsingError,HttpSignatureError);module.exports={parseRequest:function parseRequest(E,F){assert.object(E,"request");assert.object(E.headers,"request.headers");if(F===undefined){F={}}if(F.headers===undefined){F.headers=[E.headers["x-date"]?"x-date":"date"]}assert.object(F,"options");assert.arrayOfString(F.headers,"options.headers");assert.optionalFinite(F.clockSkew,"options.clockSkew");var y=F.authorizationHeaderName||"authorization";if(!E.headers[y]){throw new MissingHeaderError("no "+y+" header present in the request")}F.clockSkew=F.clockSkew||300;var w=0;var C=State.New;var z=ParamsState.Name;var D="";var I="";var A={scheme:"",params:{},signingString:""};var B=E.headers[y];for(w=0;w<B.length;w++){var e=B.charAt(w);switch(Number(C)){case State.New:if(e!==" "){A.scheme+=e}else{C=State.Params}break;case State.Params:switch(Number(z)){case ParamsState.Name:var J=e.charCodeAt(0);if((J>=65&&J<=90)||(J>=97&&J<=122)){D+=e}else{if(e==="="){if(D.length===0){throw new InvalidHeaderError("bad param format")}z=ParamsState.Quote}else{throw new InvalidHeaderError("bad param format")}}break;case ParamsState.Quote:if(e==='"'){I="";z=ParamsState.Value}else{throw new InvalidHeaderError("bad param format")}break;case ParamsState.Value:if(e==='"'){A.params[D]=I;z=ParamsState.Comma}else{I+=e}break;case ParamsState.Comma:if(e===","){D="";z=ParamsState.Name}else{throw new InvalidHeaderError("bad param format")}break;default:throw new Error("Invalid substate")}break;default:throw new Error("Invalid substate")}}if(!A.params.headers||A.params.headers===""){if(E.headers["x-date"]){A.params.headers=["x-date"]}else{A.params.headers=["date"]}}else{A.params.headers=A.params.headers.split(" ")}if(!A.scheme||A.scheme!=="Signature"){throw new InvalidHeaderError('scheme was not "Signature"')}if(!A.params.keyId){throw new InvalidHeaderError("keyId was not specified")}if(!A.params.algorithm){throw new InvalidHeaderError("algorithm was not specified")}if(!A.params.signature){throw new InvalidHeaderError("signature was not specified")}A.params.algorithm=A.params.algorithm.toLowerCase();try{validateAlgorithm(A.params.algorithm)}catch(h){if(h instanceof InvalidAlgorithmError){throw (new InvalidParamsError(A.params.algorithm+" is not supported"))}else{throw (h)}}for(w=0;w<A.params.headers.length;w++){var i=A.params.headers[w].toLowerCase();A.params.headers[w]=i;if(i==="request-line"){if(!F.strict){A.signingString+=E.method+" "+E.url+" HTTP/"+E.httpVersion}else{throw (new StrictParsingError("request-line is not a valid header with strict parsing enabled."))}}else{if(i==="(request-target)"){A.signingString+="(request-target): "+E.method.toLowerCase()+" "+E.url}else{var x=E.headers[i];if(x===undefined){throw new MissingHeaderError(i+" was not in the request")}A.signingString+=i+": "+x}}if((w+1)<A.params.headers.length){A.signingString+="\n"}}var c;if(E.headers.date||E.headers["x-date"]){if(E.headers["x-date"]){c=new Date(E.headers["x-date"])}else{c=new Date(E.headers.date)}var H=new Date();var G=Math.abs(H.getTime()-c.getTime());if(G>F.clockSkew*1000){throw new ExpiredRequestError("clock skew of "+(G/1000)+"s was greater than "+F.clockSkew+"s")}}F.headers.forEach(function(a){if(A.params.headers.indexOf(a.toLowerCase())<0){throw new MissingHeaderError(a+" was not a signed header")}});if(F.algorithms){if(F.algorithms.indexOf(A.params.algorithm)===-1){throw new InvalidParamsError(A.params.algorithm+" is not a supported algorithm")}}A.algorithm=A.params.algorithm.toUpperCase();A.keyId=A.params.keyId;return A}};