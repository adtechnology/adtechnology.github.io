var assert=require("assert-plus");var util=require("util");var utils=require("./utils");var HASH_ALGOS=utils.HASH_ALGOS;var PK_ALGOS=utils.PK_ALGOS;var HttpSignatureError=utils.HttpSignatureError;var InvalidAlgorithmError=utils.InvalidAlgorithmError;var validateAlgorithm=utils.validateAlgorithm;var State={New:0,Params:1};var ParamsState={Name:0,Quote:1,Value:2,Comma:3};function ExpiredRequestError(a){HttpSignatureError.call(this,a,ExpiredRequestError)}util.inherits(ExpiredRequestError,HttpSignatureError);function InvalidHeaderError(a){HttpSignatureError.call(this,a,InvalidHeaderError)}util.inherits(InvalidHeaderError,HttpSignatureError);function InvalidParamsError(a){HttpSignatureError.call(this,a,InvalidParamsError)}util.inherits(InvalidParamsError,HttpSignatureError);function MissingHeaderError(a){HttpSignatureError.call(this,a,MissingHeaderError)}util.inherits(MissingHeaderError,HttpSignatureError);function StrictParsingError(a){HttpSignatureError.call(this,a,StrictParsingError)}util.inherits(StrictParsingError,HttpSignatureError);module.exports={parseRequest:function parseRequest(j,g){assert.object(j,"request");assert.object(j.headers,"request.headers");if(g===undefined){g={}}if(g.headers===undefined){g.headers=[j.headers["x-date"]?"x-date":"date"]}assert.object(g,"options");assert.arrayOfString(g.headers,"options.headers");assert.optionalFinite(g.clockSkew,"options.clockSkew");var p=g.authorizationHeaderName||"authorization";if(!j.headers[p]){throw new MissingHeaderError("no "+p+" header present in the request")}g.clockSkew=g.clockSkew||300;var r=0;var l=State.New;var o=ParamsState.Name;var k="";var b="";var n={scheme:"",params:{},signingString:""};var m=j.headers[p];for(r=0;r<m.length;r++){var u=m.charAt(r);switch(Number(l)){case State.New:if(u!==" "){n.scheme+=u}else{l=State.Params}break;case State.Params:switch(Number(o)){case ParamsState.Name:var a=u.charCodeAt(0);if((a>=65&&a<=90)||(a>=97&&a<=122)){k+=u}else{if(u==="="){if(k.length===0){throw new InvalidHeaderError("bad param format")}o=ParamsState.Quote}else{throw new InvalidHeaderError("bad param format")}}break;case ParamsState.Quote:if(u==='"'){b="";o=ParamsState.Value}else{throw new InvalidHeaderError("bad param format")}break;case ParamsState.Value:if(u==='"'){n.params[k]=b;o=ParamsState.Comma}else{b+=u}break;case ParamsState.Comma:if(u===","){k="";o=ParamsState.Name}else{throw new InvalidHeaderError("bad param format")}break;default:throw new Error("Invalid substate")}break;default:throw new Error("Invalid substate")}}if(!n.params.headers||n.params.headers===""){if(j.headers["x-date"]){n.params.headers=["x-date"]}else{n.params.headers=["date"]}}else{n.params.headers=n.params.headers.split(" ")}if(!n.scheme||n.scheme!=="Signature"){throw new InvalidHeaderError('scheme was not "Signature"')}if(!n.params.keyId){throw new InvalidHeaderError("keyId was not specified")}if(!n.params.algorithm){throw new InvalidHeaderError("algorithm was not specified")}if(!n.params.signature){throw new InvalidHeaderError("signature was not specified")}n.params.algorithm=n.params.algorithm.toLowerCase();try{validateAlgorithm(n.params.algorithm)}catch(t){if(t instanceof InvalidAlgorithmError){throw (new InvalidParamsError(n.params.algorithm+" is not supported"))}else{throw (t)}}for(r=0;r<n.params.headers.length;r++){var s=n.params.headers[r].toLowerCase();n.params.headers[r]=s;if(s==="request-line"){if(!g.strict){n.signingString+=j.method+" "+j.url+" HTTP/"+j.httpVersion}else{throw (new StrictParsingError("request-line is not a valid header with strict parsing enabled."))}}else{if(s==="(request-target)"){n.signingString+="(request-target): "+j.method.toLowerCase()+" "+j.url}else{var q=j.headers[s];if(q===undefined){throw new MissingHeaderError(s+" was not in the request")}n.signingString+=s+": "+q}}if((r+1)<n.params.headers.length){n.signingString+="\n"}}var v;if(j.headers.date||j.headers["x-date"]){if(j.headers["x-date"]){v=new Date(j.headers["x-date"])}else{v=new Date(j.headers.date)}var d=new Date();var f=Math.abs(d.getTime()-v.getTime());if(f>g.clockSkew*1000){throw new ExpiredRequestError("clock skew of "+(f/1000)+"s was greater than "+g.clockSkew+"s")}}g.headers.forEach(function(c){if(n.params.headers.indexOf(c.toLowerCase())<0){throw new MissingHeaderError(c+" was not a signed header")}});if(g.algorithms){if(g.algorithms.indexOf(n.params.algorithm)===-1){throw new InvalidParamsError(n.params.algorithm+" is not a supported algorithm")}}n.algorithm=n.params.algorithm.toUpperCase();n.keyId=n.params.keyId;return n}};