process.umask(parseInt("22",8));var fs=require("fs");var path=require("path");var fstream=require("fstream");var test=require("tap").test;var tar=require("../tar.js");var file=path.resolve(__dirname,"dir-normalization.tar");var target=path.resolve(__dirname,"tmp/dir-normalization-test");var ee=0;var expectEntries=[{path:"fixtures/",mode:"755",type:"5",linkpath:""},{path:"fixtures/a/",mode:"755",type:"5",linkpath:""},{path:"fixtures/the-chumbler",mode:"755",type:"2",linkpath:path.resolve(target,"a/b/c/d/the-chumbler")},{path:"fixtures/a/b/",mode:"755",type:"5",linkpath:""},{path:"fixtures/a/x",mode:"644",type:"0",linkpath:""},{path:"fixtures/a/b/c/",mode:"755",type:"5",linkpath:""},{path:"fixtures/a/b/c/y",mode:"755",type:"2",linkpath:"../../x"}];var ef=0;var expectFiles=[{path:"",mode:"40755",type:"Directory",depth:0,linkpath:undefined},{path:"/fixtures",mode:"40755",type:"Directory",depth:1,linkpath:undefined},{path:"/fixtures/a",mode:"40755",type:"Directory",depth:2,linkpath:undefined},{path:"/fixtures/a/b",mode:"40755",type:"Directory",depth:3,linkpath:undefined},{path:"/fixtures/a/b/c",mode:"40755",type:"Directory",depth:4,linkpath:undefined},{path:"/fixtures/a/b/c/y",mode:"120755",type:"SymbolicLink",depth:5,linkpath:"../../x"},{path:"/fixtures/a/x",mode:"100644",type:"File",depth:3,linkpath:undefined},{path:"/fixtures/the-chumbler",mode:"120755",type:"SymbolicLink",depth:2,linkpath:path.resolve(target,"a/b/c/d/the-chumbler")}];test("preclean",function(a){require("rimraf").sync(path.join(__dirname,"/tmp/dir-normalization-test"));a.pass("cleaned!");a.end()});test("extract test",function(a){var d=tar.Extract(target);var c=fs.createReadStream(file);c.pipe(d);d.on("end",function(){a.equal(ee,expectEntries.length,"should see "+expectEntries.length+" entries");d.removeAllListeners("entry");d.on("entry",function(f){a.fail("Should not get entries after end!")});b()});d.on("entry",function(f){var h=f.props.mode&(~parseInt("22",8));var g={path:f.path,mode:h.toString(8),type:f.props.type,linkpath:f.props.linkpath};var e=expectEntries[ee++];a.equivalent(g,e,"tar entry "+ee+" "+(e&&e.path))});function b(){var g=fstream.Reader({path:target,type:"Directory",sort:"alpha"});g.on("ready",function(){e(g)});g.on("end",f);function e(i){var k=i.path.substr(target.length);var l=i.props.mode&(~parseInt("22",8));var j={path:k,mode:l.toString(8),type:i.props.type,depth:i.props.depth,linkpath:i.props.linkpath};var h=expectFiles[ef++];a.equivalent(j,h,"unpacked file "+ef+" "+(h&&h.path));i.on("entry",e)}function f(){a.equal(ef,expectFiles.length,"should have "+ef+" items");a.end()}}});