module.exports=EntryWriter;var tar=require("../tar.js"),TarHeader=require("./header.js"),Entry=require("./entry.js"),inherits=require("inherits"),BlockStream=require("block-stream"),ExtendedHeaderWriter,Stream=require("stream").Stream,EOF={};inherits(EntryWriter,Stream);function EntryWriter(a){var b=this;if(!(b instanceof EntryWriter)){return new EntryWriter(a)}Stream.apply(this);b.writable=true;b.readable=true;b._stream=new BlockStream(512);b._stream.on("data",function(d){b.emit("data",d)});b._stream.on("drain",function(){b.emit("drain")});b._stream.on("end",function(){b.emit("end");b.emit("close")});b.props=a;if(a.type==="Directory"){a.size=0}a.ustar="ustar\0";a.ustarver="00";b.path=a.path;b._buffer=[];b._didHeader=false;b._meta=false;b.on("pipe",function(){b._process()})}EntryWriter.prototype.write=function(a){if(this._ended){return this.emit("error",new Error("write after end"))}this._buffer.push(a);this._process();this._needDrain=this._buffer.length>0;return !this._needDrain};EntryWriter.prototype.end=function(a){if(a){this._buffer.push(a)}this._buffer.push(EOF);this._ended=true;this._process();this._needDrain=this._buffer.length>0};EntryWriter.prototype.pause=function(){this._paused=true;this.emit("pause")};EntryWriter.prototype.resume=function(){this._paused=false;this.emit("resume");this._process()};EntryWriter.prototype.add=function(a){if(!this.parent){return this.emit("error",new Error("no parent"))}if(!this._ended){this.end()}return this.parent.add(a)};EntryWriter.prototype._header=function(){if(this._didHeader){return}this._didHeader=true;var b=TarHeader.encode(this.props);if(this.props.needExtended&&!this._meta){var a=this;ExtendedHeaderWriter=ExtendedHeaderWriter||require("./extended-header-writer.js");ExtendedHeaderWriter(this.props).on("data",function(d){a.emit("data",d)}).on("error",function(c){a.emit("error",c)}).end()}this.emit("data",b);this.emit("header")};EntryWriter.prototype._process=function(){if(!this._didHeader&&!this._meta){this._header()}if(this._paused||this._processing){return}this._processing=true;var a=this._buffer;for(var b=0;b<a.length;b++){var d=a[b];if(d===EOF){this._stream.end()}else{this._stream.write(d)}if(this._paused){this._processing=false;if(b<a.length){this._needDrain=true;this._buffer=a.slice(b+1)}return}}this._buffer.length=0;this._processing=false;this.emit("drain")};EntryWriter.prototype.destroy=function(){};