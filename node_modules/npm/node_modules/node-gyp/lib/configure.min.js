module.exports=exports=configure;module.exports.test={PythonFinder:PythonFinder,findAccessibleSync:findAccessibleSync,findPython:findPython};var fs=require("graceful-fs"),path=require("path"),log=require("npmlog"),osenv=require("osenv"),which=require("which"),semver=require("semver"),mkdirp=require("mkdirp"),cp=require("child_process"),extend=require("util")._extend,processRelease=require("./process-release"),win=process.platform==="win32",findNodeDirectory=require("./find-node-directory"),msgFormat=require("util").format;if(win){var findVS2017=require("./find-vs2017")}exports.usage="Generates "+(win?"MSVC project files":"a Makefile")+" for the current module";function configure(d,e,n){var j=d.opts.python||process.env.PYTHON||"python2",o=path.resolve("build"),b=["config.gypi","common.gypi"],h=[],m,i=processRelease(e,d,process.version,process.release);findPython(j,function(p,q){if(p){n(p)}else{j=q;l()}});function l(){process.env.PYTHON=j;if(d.opts.nodedir){m=d.opts.nodedir.replace(/^~/,osenv.home());log.verbose("get node dir","compiling against specified --nodedir dev files: %s",m);k()}else{if("v"+i.version!==process.version){log.verbose("get node dir","compiling against --target node version: %s",i.version)}else{log.verbose("get node dir","no --target version specified, falling back to host node version: %s",i.version)}if(!i.semver){return n(new Error("Invalid version number: "+i.version))}d.opts.ensure=true;d.commands.install([i.version],function(q,p){if(q){return n(q)}log.verbose("get node dir","target node version installed:",i.versionDir);m=path.resolve(d.devDir,i.versionDir);k()})}}function k(){log.verbose("build dir",'attempting to create "build" dir: %s',o);mkdirp(o,function(q,p){if(q){return n(q)}log.verbose("build dir",'"build" dir needed to be created?',p);if(win&&(!d.opts.msvs_version||d.opts.msvs_version==="2017")){findVS2017(function(r,s){if(r){log.verbose("Not using VS2017:",r.message);g()}else{g(null,s)}})}else{g()}})}function g(r,s){if(r){return n(r)}var v="config.gypi";var x=path.resolve(o,v);log.verbose("build/"+v,"creating config file");var p=process.config||{},q=p.target_defaults,w=p.variables;if(!w){w=p.variables={}}if(!q){q=p.target_defaults={}}q.cflags=[];q.defines=[];q.include_dirs=[];q.libraries=[];if("debug" in d.opts){q.default_configuration=d.opts.debug?"Debug":"Release"}if(!q.default_configuration){q.default_configuration="Release"}w.target_arch=d.opts.arch||process.arch||"ia32";w.nodedir=m;w.standalone_static_library=d.opts.thin?0:1;if(s){d.opts.msvs_version="2015";process.env.GYP_MSVS_VERSION=2015;process.env.GYP_MSVS_OVERRIDE_PATH=s.path;q.msbuild_toolset="v141";q.msvs_windows_target_platform_version=s.sdk;w.msbuild_path=path.join(s.path,"MSBuild","15.0","Bin","MSBuild.exe")}Object.keys(d.opts).forEach(function(z){if(z==="argv"){return}if(z in d.configDefs){return}w[z.replace(/-/g,"_")]=d.opts[z]});function t(A,z){if(typeof z==="boolean"){return String(z)}return z}log.silly("build/"+v,p);var u='# Do not edit. File was generated by node-gyp\'s "configure" step',y=JSON.stringify(p,t,2);log.verbose("build/"+v,"writing out config file: %s",x);h.push(x);fs.writeFile(x,[u,y,""].join("\n"),c)}function c(r){if(r){return n(r)}var q=b.shift();if(!q){return f()}var p=path.resolve(q);log.verbose(q,"checking for gypi file: %s",p);fs.stat(p,function(t,s){if(t){if(t.code=="ENOENT"){c()}else{n(t)}}else{log.verbose(q,"found gypi file");h.push(p);c()}})}function f(r){if(r){return n(r)}if(!~e.indexOf("-f")&&!~e.indexOf("--format")){if(win){log.verbose("gyp",'gyp format was not specified; forcing "msvs"');e.push("-f","msvs")}else{log.verbose("gyp",'gyp format was not specified; forcing "make"');e.push("-f","make")}}function t(){return e.some(function(z){return z.indexOf("msvs_version")===0})}if(win&&!t()){if("msvs_version" in d.opts){e.push("-G","msvs_version="+d.opts.msvs_version)}else{e.push("-G","msvs_version=auto")}}h.forEach(function(z){e.push("-I",z)});var v=undefined;if(process.platform==="aix"){var u=findNodeDirectory();var s=["include/node/node.exp","out/Release/node.exp","out/Debug/node.exp","node.exp"];var q="find exports file";v=findAccessibleSync(q,u,s);if(v!==undefined){log.verbose(q,"Found exports file: %s",v)}else{var p=msgFormat("Could not find node.exp file in %s",u);log.error(q,"Could not find exports file");return n(new Error(p))}}var x=path.resolve(__dirname,"..","gyp","gyp_main.py");var w=path.resolve(__dirname,"..","addon.gypi");var y=path.resolve(m,"include/node/common.gypi");fs.stat(y,function(C,A){if(C){y=path.resolve(m,"common.gypi")}var z="build";if(win){z=o}var F=path.resolve(__dirname,"..");var B=path.join(m,!d.opts.nodedir?"<(target_arch)":"$(Configuration)",i.name+".lib");e.push("-I",w);e.push("-I",y);e.push("-Dlibrary=shared_library");e.push("-Dvisibility=default");e.push("-Dnode_root_dir="+m);if(process.platform==="aix"){e.push("-Dnode_exp_file="+v)}e.push("-Dnode_gyp_dir="+F);e.push("-Dnode_lib_file="+B);e.push("-Dmodule_root_dir="+process.cwd());e.push("-Dnode_engine="+(d.opts.node_engine||process.jsEngine||"v8"));e.push("--depth=.");e.push("--no-parallel");e.push("--generator-output",z);e.push("-Goutput_dir=.");e.unshift("binding.gyp");e.unshift(x);var E=[path.join(__dirname,"..","gyp","pylib")];if(process.env.PYTHONPATH){E.push(process.env.PYTHONPATH)}process.env.PYTHONPATH=E.join(win?";":":");var D=d.spawn(j,e);D.on("exit",a)})}function a(p,q){if(p!==0){n(new Error("`gyp` failed with exit code: "+p))}else{n()}}}function findAccessibleSync(g,a,f){for(var d=0;d<f.length;d++){var c=path.resolve(a,f[d]);try{var b=fs.openSync(c,"r")}catch(h){log.silly(g,"Could not open %s: %s",c,h.message);continue}fs.closeSync(b);log.silly(g,"Found readable %s",c);return c}return undefined}function PythonFinder(a,b){this.callback=b;this.python=a}PythonFinder.prototype={checkPythonLauncherDepth:0,env:process.env,execFile:cp.execFile,log:log,resolve:path.win32&&path.win32.resolve||path.resolve,stat:fs.stat,which:which,win:win,checkPython:function checkPython(){this.log.verbose("check python",'checking for Python executable "%s" in the PATH',this.python);this.which(this.python,function(a,b){if(a){this.log.verbose("`which` failed",this.python,a);if(this.python==="python2"){this.python="python";return this.checkPython()}if(this.win){this.checkPythonLauncher()}else{this.failNoPython()}}else{this.log.verbose("`which` succeeded",this.python,b);this.python=b;this.checkPythonVersion()}}.bind(this))},checkPythonLauncher:function checkPythonLauncher(){this.checkPythonLauncherDepth+=1;this.log.verbose('could not find "'+this.python+'". checking python launcher');var b=extend({},this.env);b.TERM="dumb";var a=["-2","-c","import sys; print sys.executable"];this.execFile("py.exe",a,{env:b},function(d,c){if(d){this.guessPython()}else{this.python=c.trim();this.log.verbose("check python launcher","python executable found: %j",this.python);this.checkPythonVersion()}this.checkPythonLauncherDepth-=1}.bind(this))},checkPythonVersion:function checkPythonVersion(){var a=["-c","import platform; print(platform.python_version());"];var b=extend({},this.env);b.TERM="dumb";this.execFile(this.python,a,{env:b},function(h,c){if(h){return this.callback(h)}this.log.verbose("check python version",'`%s -c "'+a[1]+'"` returned: %j',this.python,c);var d=c.trim();if(~d.indexOf("+")){this.log.silly('stripping "+" sign(s) from version');d=d.replace(/\+/g,"")}if(~d.indexOf("rc")){this.log.silly('stripping "rc" identifier from version');d=d.replace(/rc(.*)$/ig,"")}var f=semver.Range(">=2.5.0 <3.0.0");var g=false;try{g=f.test(d)}catch(i){this.log.silly("range.test() error",i)}if(g){this.callback(null,this.python)}else{if(this.win&&this.checkPythonLauncherDepth===0){this.checkPythonLauncher()}else{this.failPythonVersion(d)}}}.bind(this))},failNoPython:function failNoPython(){var a="Can't find Python executable \""+this.python+'", you can set the PYTHON env variable.';this.callback(new Error(a))},failPythonVersion:function failPythonVersion(a){var b='Python executable "'+this.python+'" is v'+a+", which is not supported by gyp.\nYou can pass the --python switch to point to Python >= v2.5.0 & < 3.0.0.";this.callback(new Error(b))},guessPython:function guessPython(){this.log.verbose('could not find "'+this.python+'". guessing location');var b=this.env.SystemDrive||"C:\\";if(b[b.length-1]!=="\\"){b+="\\"}var a=this.resolve(b,"Python27","python.exe");this.log.verbose("ensuring that file exists:",a);this.stat(a,function(d,c){if(d){if(d.code=="ENOENT"){this.failNoPython()}else{this.callback(d)}return}this.python=a;this.checkPythonVersion()}.bind(this))}};function findPython(a,c){var b=new PythonFinder(a,c);b.checkPython()};