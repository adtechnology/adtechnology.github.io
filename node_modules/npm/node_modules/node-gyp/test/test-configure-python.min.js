"use strict";var test=require("tape");var path=require("path");var gyp=require("../lib/node-gyp");var requireInject=require("require-inject");var configure=requireInject("../lib/configure",{"graceful-fs":{openSync:function(a,b){return 0},closeSync:function(a){},writeFile:function(b,c,a){a()},stat:function(b,a){a(null,{})}}});var EXPECTED_PYPATH=path.join(__dirname,"..","gyp","pylib");var SEPARATOR=process.platform=="win32"?";":":";var SPAWN_RESULT={on:function(){}};test("configure PYTHONPATH with no existing env",function(a){a.plan(1);delete process.env.PYTHONPATH;var b=gyp();b.parseArgv([]);b.spawn=function(){a.equal(process.env.PYTHONPATH,EXPECTED_PYPATH);return SPAWN_RESULT};configure(b,[],a.fail)});test("configure PYTHONPATH with existing env of one dir",function(a){a.plan(2);var b=path.join("a","b");process.env.PYTHONPATH=b;var c=gyp();c.parseArgv([]);c.spawn=function(){a.equal(process.env.PYTHONPATH,[EXPECTED_PYPATH,b].join(SEPARATOR));var d=process.env.PYTHONPATH.split(SEPARATOR);a.deepEqual(d,[EXPECTED_PYPATH,b]);return SPAWN_RESULT};configure(c,[],a.fail)});test("configure PYTHONPATH with existing env of multiple dirs",function(c){c.plan(2);var b=path.join("a","b");var a=path.join("b","c");var d=[b,a].join(SEPARATOR);process.env.PYTHONPATH=d;var e=gyp();e.parseArgv([]);e.spawn=function(){c.equal(process.env.PYTHONPATH,[EXPECTED_PYPATH,d].join(SEPARATOR));var f=process.env.PYTHONPATH.split(SEPARATOR);c.deepEqual(f,[EXPECTED_PYPATH,b,a]);return SPAWN_RESULT};configure(e,[],c.fail)});