var canReorder=require("./reorderable").canReorder;var extractProperties=require("./extract-properties");var optimizeProperties=require("./properties/optimize");var serializeRules=require("../../writer/one-time").rules;var Token=require("../../tokenizer/token");function mergeNonAdjacentBySelector(l,b){var g=b.cache.specificity;var y={};var s=[];var r;for(r=l.length-1;r>=0;r--){if(l[r][0]!=Token.RULE){continue}if(l[r][2].length===0){continue}var q=serializeRules(l[r][1]);y[q]=[r].concat(y[q]||[]);if(y[q].length==2){s.push(q)}}for(r=s.length-1;r>=0;r--){var f=y[s[r]];selectorIterator:for(var p=f.length-1;p>0;p--){var u=f[p-1];var n=l[u];var k=f[p];var c=l[k];directionIterator:for(var w=1;w>=-1;w-=2){var m=w==1;var o=m?u+1:k-1;var a=m?k:u;var v=m?1:-1;var e=m?n:c;var x=m?c:n;var t=extractProperties(e);while(o!=a){var d=extractProperties(l[o]);o+=v;var h=m?canReorder(t,d,g):canReorder(d,t,g);if(!h&&!m){continue selectorIterator}if(!h&&m){continue directionIterator}}if(m){Array.prototype.push.apply(e[2],x[2]);x[2]=e[2]}else{Array.prototype.push.apply(x[2],e[2])}optimizeProperties(x[2],true,true,b);e[2]=[]}}}}module.exports=mergeNonAdjacentBySelector;