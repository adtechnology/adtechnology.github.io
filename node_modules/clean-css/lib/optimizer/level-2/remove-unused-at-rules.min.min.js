var populateComponents=require("./properties/populate-components");var wrapForOptimizing=require("../wrap-for-optimizing").single;var restoreFromOptimizing=require("../restore-from-optimizing");var Token=require("../../tokenizer/token");var animationNameRegex=/^(\-moz\-|\-o\-|\-webkit\-)?animation-name$/;var animationRegex=/^(\-moz\-|\-o\-|\-webkit\-)?animation$/;var keyframeRegex=/^@(\-moz\-|\-o\-|\-webkit\-)?keyframes /;var importantRegex=/\s{0,31}!important$/;var optionalMatchingQuotesRegex=/^(['"]?)(.*)\1$/;function normalize(b){return b.replace(optionalMatchingQuotesRegex,"$2").replace(importantRegex,"")}function removeUnusedAtRules(c,d){removeUnusedAtRule(c,matchCounterStyle,markCounterStylesAsUsed,d);removeUnusedAtRule(c,matchFontFace,markFontFacesAsUsed,d);removeUnusedAtRule(c,matchKeyframe,markKeyframesAsUsed,d);removeUnusedAtRule(c,matchNamespace,markNamespacesAsUsed,d)}function removeUnusedAtRule(o,t,i,v){var l={};var n;var u;var p;var r;var q,s;for(q=0,s=o.length;q<s;q++){t(o[q],l)}if(Object.keys(l).length===0){return}markUsedAtRules(o,i,l,v);for(n in l){u=l[n];for(q=0,s=u.length;q<s;q++){p=u[q];r=p[0]==Token.AT_RULE?1:2;p[r]=[]}}}function markUsedAtRules(l,i,j,m){var k=i(j);var n,h;for(n=0,h=l.length;n<h;n++){switch(l[n][0]){case Token.RULE:k(l[n],m);break;case Token.NESTED_BLOCK:markUsedAtRules(l[n][2],i,j,m)}}}function matchCounterStyle(d,f){var e;if(d[0]==Token.AT_RULE_BLOCK&&d[1][0][1].indexOf("@counter-style")===0){e=d[1][0][1].split(" ")[1];f[e]=f[e]||[];f[e].push(d)}}function markCounterStylesAsUsed(b){return function(i,j){var h;var k;var l,a;for(l=0,a=i[2].length;l<a;l++){h=i[2][l];if(h[1][1]=="list-style"){k=wrapForOptimizing(h);populateComponents([k],j.validator,j.warnings);if(k.components[0].value[0][1] in b){delete b[h[2][1]]}restoreFromOptimizing([k])}if(h[1][1]=="list-style-type"&&h[2][1] in b){delete b[h[2][1]]}}}}function matchFontFace(k,i){var j;var g;var l,h;if(k[0]==Token.AT_RULE_BLOCK&&k[1][0][1]=="@font-face"){for(l=0,h=k[2].length;l<h;l++){j=k[2][l];if(j[1][1]=="font-family"){g=normalize(j[2][1].toLowerCase());i[g]=i[g]||[];i[g].push(k);break}}}}function markFontFacesAsUsed(b){return function(r,t){var a;var i;var j;var l;var m,q;var p,s;for(m=0,q=r[2].length;m<q;m++){a=r[2][m];if(a[1][1]=="font"){i=wrapForOptimizing(a);populateComponents([i],t.validator,t.warnings);j=i.components[6];for(p=0,s=j.value.length;p<s;p++){l=normalize(j.value[p][1].toLowerCase());if(l in b){delete b[l]}}restoreFromOptimizing([i])}if(a[1][1]=="font-family"){for(p=2,s=a.length;p<s;p++){l=normalize(a[p][1].toLowerCase());if(l in b){delete b[l]}}}}}}function matchKeyframe(d,f){var e;if(d[0]==Token.NESTED_BLOCK&&keyframeRegex.test(d[1][0][1])){e=d[1][0][1].split(" ")[1];f[e]=f[e]||[];f[e].push(d)}}function markKeyframesAsUsed(b){return function(p,r){var a;var i;var j;var l,o;var m,q;for(l=0,o=p[2].length;l<o;l++){a=p[2][l];if(animationRegex.test(a[1][1])){i=wrapForOptimizing(a);populateComponents([i],r.validator,r.warnings);j=i.components[7];for(m=0,q=j.value.length;m<q;m++){if(j.value[m][1] in b){delete b[j.value[m][1]]}}restoreFromOptimizing([i])}if(animationNameRegex.test(a[1][1])){for(m=2,q=a.length;m<q;m++){if(a[m][1] in b){delete b[a[m][1]]}}}}}}function matchNamespace(d,f){var e;if(d[0]==Token.AT_RULE&&d[1].indexOf("@namespace")===0){e=d[1].split(" ")[1];f[e]=f[e]||[];f[e].push(d)}}function markNamespacesAsUsed(c){var d=new RegExp(Object.keys(c).join("\\||")+"\\|","g");return function(a){var i;var p;var j;var b,m;var l,o;for(b=0,m=a[1].length;b<m;b++){p=a[1][b];i=p[1].match(d);for(l=0,o=i.length;l<o;l++){j=i[l].substring(0,i[l].length-1);if(j in c){delete c[j]}}}}}module.exports=removeUnusedAtRules;