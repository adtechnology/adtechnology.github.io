var populateComponents=require("./properties/populate-components");var wrapForOptimizing=require("../wrap-for-optimizing").single;var restoreFromOptimizing=require("../restore-from-optimizing");var Token=require("../../tokenizer/token");var animationNameRegex=/^(\-moz\-|\-o\-|\-webkit\-)?animation-name$/;var animationRegex=/^(\-moz\-|\-o\-|\-webkit\-)?animation$/;var keyframeRegex=/^@(\-moz\-|\-o\-|\-webkit\-)?keyframes /;var importantRegex=/\s{0,31}!important$/;var optionalMatchingQuotesRegex=/^(['"]?)(.*)\1$/;function normalize(a){return a.replace(optionalMatchingQuotesRegex,"$2").replace(importantRegex,"")}function removeUnusedAtRules(b,a){removeUnusedAtRule(b,matchCounterStyle,markCounterStylesAsUsed,a);removeUnusedAtRule(b,matchFontFace,markFontFacesAsUsed,a);removeUnusedAtRule(b,matchKeyframe,markKeyframesAsUsed,a);removeUnusedAtRule(b,matchNamespace,markNamespacesAsUsed,a)}function removeUnusedAtRule(h,c,m,a){var k={};var j;var b;var g;var e;var f,d;for(f=0,d=h.length;f<d;f++){c(h[f],k)}if(Object.keys(k).length===0){return}markUsedAtRules(h,m,k,a);for(j in k){b=k[j];for(f=0,d=b.length;f<d;f++){g=b[f];e=g[0]==Token.AT_RULE?1:2;g[e]=[]}}}function markUsedAtRules(e,a,g,d){var f=a(g);var c,b;for(c=0,b=e.length;c<b;c++){switch(e[c][0]){case Token.RULE:f(e[c],d);break;case Token.NESTED_BLOCK:markUsedAtRules(e[c][2],a,g,d)}}}function matchCounterStyle(b,c){var a;if(b[0]==Token.AT_RULE_BLOCK&&b[1][0][1].indexOf("@counter-style")===0){a=b[1][0][1].split(" ")[1];c[a]=c[a]||[];c[a].push(b)}}function markCounterStylesAsUsed(a){return function(f,e){var g;var d;var c,b;for(c=0,b=f[2].length;c<b;c++){g=f[2][c];if(g[1][1]=="list-style"){d=wrapForOptimizing(g);populateComponents([d],e.validator,e.warnings);if(d.components[0].value[0][1] in a){delete a[g[2][1]]}restoreFromOptimizing([d])}if(g[1][1]=="list-style-type"&&g[2][1] in a){delete a[g[2][1]]}}}}function matchFontFace(d,f){var e;var b;var c,a;if(d[0]==Token.AT_RULE_BLOCK&&d[1][0][1]=="@font-face"){for(c=0,a=d[2].length;c<a;c++){e=d[2][c];if(e[1][1]=="font-family"){b=normalize(e[2][1].toLowerCase());f[b]=f[b]||[];f[b].push(d);break}}}}function markFontFacesAsUsed(a){return function(d,b){var o;var n;var k;var h;var g,e;var f,c;for(g=0,e=d[2].length;g<e;g++){o=d[2][g];if(o[1][1]=="font"){n=wrapForOptimizing(o);populateComponents([n],b.validator,b.warnings);k=n.components[6];for(f=0,c=k.value.length;f<c;f++){h=normalize(k.value[f][1].toLowerCase());if(h in a){delete a[h]}}restoreFromOptimizing([n])}if(o[1][1]=="font-family"){for(f=2,c=o.length;f<c;f++){h=normalize(o[f][1].toLowerCase());if(h in a){delete a[h]}}}}}}function matchKeyframe(b,c){var a;if(b[0]==Token.NESTED_BLOCK&&keyframeRegex.test(b[1][0][1])){a=b[1][0][1].split(" ")[1];c[a]=c[a]||[];c[a].push(b)}}function markKeyframesAsUsed(a){return function(d,b){var n;var k;var h;var g,e;var f,c;for(g=0,e=d[2].length;g<e;g++){n=d[2][g];if(animationRegex.test(n[1][1])){k=wrapForOptimizing(n);populateComponents([k],b.validator,b.warnings);h=k.components[7];for(f=0,c=h.value.length;f<c;f++){if(h.value[f][1] in a){delete a[h.value[f][1]]}}restoreFromOptimizing([k])}if(animationNameRegex.test(n[1][1])){for(f=2,c=n.length;f<c;f++){if(n[f][1] in a){delete a[n[f][1]]}}}}}}function matchNamespace(b,c){var a;if(b[0]==Token.AT_RULE&&b[1].indexOf("@namespace")===0){a=b[1].split(" ")[1];c[a]=c[a]||[];c[a].push(b)}}function markNamespacesAsUsed(b){var a=new RegExp(Object.keys(b).join("\\||")+"\\|","g");return function(k){var g;var n;var f;var h,d;var e,c;for(h=0,d=k[1].length;h<d;h++){n=k[1][h];g=n[1].match(a);for(e=0,c=g.length;e<c;e++){f=g[e].substring(0,g[e].length-1);if(f in b){delete b[f]}}}}}module.exports=removeUnusedAtRules;