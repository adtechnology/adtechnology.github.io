var isMergeable=require("./is-mergeable");var optimizeProperties=require("./properties/optimize");var sortSelectors=require("../level-1/sort-selectors");var tidyRules=require("../level-1/tidy-rules");var OptimizationLevel=require("../../options/optimization-level").OptimizationLevel;var serializeBody=require("../../writer/one-time").body;var serializeRules=require("../../writer/one-time").rules;var Token=require("../../tokenizer/token");function mergeAdjacent(h,a){var c=[null,[],[]];var o=a.options;var b=o.compatibility.selectors.adjacentSpace;var k=o.level[OptimizationLevel.One].selectorsSortingMethod;var j=o.compatibility.selectors.mergeablePseudoClasses;var g=o.compatibility.selectors.mergeablePseudoElements;var n=o.compatibility.selectors.mergeLimit;var m=o.compatibility.selectors.multiplePseudoMerging;for(var f=0,e=h.length;f<e;f++){var d=h[f];if(d[0]!=Token.RULE){c=[null,[],[]];continue}if(c[0]==Token.RULE&&serializeRules(d[1])==serializeRules(c[1])){Array.prototype.push.apply(c[2],d[2]);optimizeProperties(c[2],true,true,a);d[2]=[]}else{if(c[0]==Token.RULE&&serializeBody(d[2])==serializeBody(c[2])&&isMergeable(serializeRules(d[1]),j,g,m)&&isMergeable(serializeRules(c[1]),j,g,m)&&c[1].length<n){c[1]=tidyRules(c[1].concat(d[1]),false,b,false,a.warnings);c[1]=c.length>1?sortSelectors(c[1],k):c[1];d[2]=[]}else{c=d}}}}module.exports=mergeAdjacent;