var extractImportUrlAndMedia=require("./extract-import-url-and-media");var restoreImport=require("./restore-import");var rewriteUrl=require("./rewrite-url");var Token=require("../tokenizer/token");var isImport=require("../utils/is-import");var SOURCE_MAP_COMMENT_PATTERN=/^\/\*# sourceMappingURL=(\S+) \*\/$/;function rebase(d,a,b,c){return a?rebaseEverything(d,b,c):rebaseAtRules(d,b,c)}function rebaseEverything(f,d,e){var c;var b,a;for(b=0,a=f.length;b<a;b++){c=f[b];switch(c[0]){case Token.AT_RULE:rebaseAtRule(c,d,e);break;case Token.AT_RULE_BLOCK:rebaseProperties(c[2],d,e);break;case Token.COMMENT:rebaseSourceMapComment(c,e);break;case Token.NESTED_BLOCK:rebaseEverything(c[2],d,e);break;case Token.RULE:rebaseProperties(c[2],d,e);break}}return f}function rebaseAtRules(f,d,e){var c;var b,a;for(b=0,a=f.length;b<a;b++){c=f[b];switch(c[0]){case Token.AT_RULE:rebaseAtRule(c,d,e);break}}return f}function rebaseAtRule(c,b,d){if(!isImport(c[1])){return}var a=extractImportUrlAndMedia(c[1]);var e=rewriteUrl(a[0],d);var f=a[1];c[1]=restoreImport(e,f)}function rebaseSourceMapComment(a,b){var c=SOURCE_MAP_COMMENT_PATTERN.exec(a[1]);if(c&&c[1].indexOf("data:")===-1){a[1]=a[1].replace(c[1],rewriteUrl(c[1],b,true))}}function rebaseProperties(g,a,b){var k;var h;var f,d;var e,c;for(f=0,d=g.length;f<d;f++){k=g[f];for(e=2,c=k.length;e<c;e++){h=k[e][1];if(a.isUrl(h)){k[e][1]=rewriteUrl(h,b)}}}}module.exports=rebase;