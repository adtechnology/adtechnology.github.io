var SourceMapGenerator=require("./source-map-generator").SourceMapGenerator;var util=require("./util");var REGEX_NEWLINE=/(\r?\n)/;var NEWLINE_CODE=10;var isSourceNode="$$$isSourceNode$$$";function SourceNode(d,a,b,c,e){this.children=[];this.sourceContents={};this.line=d==null?null:d;this.column=a==null?null:a;this.source=b==null?null:b;this.name=e==null?null:e;this[isSourceNode]=true;if(c!=null){this.add(c)}}SourceNode.fromStringWithSourceMap=function SourceNode_fromStringWithSourceMap(a,i,e){var f=new SourceNode();var k=a.split(REGEX_NEWLINE);var j=0;var h=function(){var m=l();var n=l()||"";return m+n;function l(){return j<k.length?k[j++]:undefined}};var g=1,b=0;var c=null;i.eachMapping(function(l){if(c!==null){if(g<l.generatedLine){d(c,h());g++;b=0}else{var n=k[j];var m=n.substr(0,l.generatedColumn-b);k[j]=n.substr(l.generatedColumn-b);b=l.generatedColumn;d(c,m);c=l;return}}while(g<l.generatedLine){f.add(h());g++}if(b<l.generatedColumn){var n=k[j];f.add(n.substr(0,l.generatedColumn));k[j]=n.substr(l.generatedColumn);b=l.generatedColumn}c=l},this);if(j<k.length){if(c){d(c,h())}f.add(k.splice(j).join(""))}i.sources.forEach(function(l){var m=i.sourceContentFor(l);if(m!=null){if(e!=null){l=util.join(e,l)}f.setSourceContent(l,m)}});return f;function d(l,m){if(l===null||l.source===undefined){f.add(m)}else{var n=e?util.join(e,l.source):l.source;f.add(new SourceNode(l.originalLine,l.originalColumn,n,m,l.name))}}};SourceNode.prototype.add=function SourceNode_add(a){if(Array.isArray(a)){a.forEach(function(b){this.add(b)},this)}else{if(a[isSourceNode]||typeof a==="string"){if(a){this.children.push(a)}}else{throw new TypeError("Expected a SourceNode, string, or an array of SourceNodes and strings. Got "+a)}}return this};SourceNode.prototype.prepend=function SourceNode_prepend(a){if(Array.isArray(a)){for(var b=a.length-1;b>=0;b--){this.prepend(a[b])}}else{if(a[isSourceNode]||typeof a==="string"){this.children.unshift(a)}else{throw new TypeError("Expected a SourceNode, string, or an array of SourceNodes and strings. Got "+a)}}return this};SourceNode.prototype.walk=function SourceNode_walk(d){var b;for(var c=0,a=this.children.length;c<a;c++){b=this.children[c];if(b[isSourceNode]){b.walk(d)}else{if(b!==""){d(b,{source:this.source,line:this.line,column:this.column,name:this.name})}}}};SourceNode.prototype.join=function SourceNode_join(c){var d;var b;var a=this.children.length;if(a>0){d=[];for(b=0;b<a-1;b++){d.push(this.children[b]);d.push(c)}d.push(this.children[b]);this.children=d}return this};SourceNode.prototype.replaceRight=function SourceNode_replaceRight(b,a){var c=this.children[this.children.length-1];if(c[isSourceNode]){c.replaceRight(b,a)}else{if(typeof c==="string"){this.children[this.children.length-1]=c.replace(b,a)}else{this.children.push("".replace(b,a))}}return this};SourceNode.prototype.setSourceContent=function SourceNode_setSourceContent(a,b){this.sourceContents[util.toSetString(a)]=b};SourceNode.prototype.walkSourceContents=function SourceNode_walkSourceContents(d){for(var c=0,a=this.children.length;c<a;c++){if(this.children[c][isSourceNode]){this.children[c].walkSourceContents(d)}}var b=Object.keys(this.sourceContents);for(var c=0,a=b.length;c<a;c++){d(util.fromSetString(b[c]),this.sourceContents[b[c]])}};SourceNode.prototype.toString=function SourceNode_toString(){var a="";this.walk(function(b){a+=b});return a};SourceNode.prototype.toStringWithSourceMap=function SourceNode_toStringWithSourceMap(h){var c={code:"",line:1,column:0};var f=new SourceMapGenerator(h);var g=false;var e=null;var a=null;var d=null;var b=null;this.walk(function(j,k){c.code+=j;if(k.source!==null&&k.line!==null&&k.column!==null){if(e!==k.source||a!==k.line||d!==k.column||b!==k.name){f.addMapping({source:k.source,original:{line:k.line,column:k.column},generated:{line:c.line,column:c.column},name:k.name})}e=k.source;a=k.line;d=k.column;b=k.name;g=true}else{if(g){f.addMapping({generated:{line:c.line,column:c.column}});e=null;g=false}}for(var i=0,l=j.length;i<l;i++){if(j.charCodeAt(i)===NEWLINE_CODE){c.line++;c.column=0;if(i+1===l){e=null;g=false}else{if(g){f.addMapping({source:k.source,original:{line:k.line,column:k.column},generated:{line:c.line,column:c.column},name:k.name})}}}else{c.column++}}});this.walkSourceContents(function(i,j){f.setSourceContent(i,j)});return{code:c.code,map:f}};exports.SourceNode=SourceNode;