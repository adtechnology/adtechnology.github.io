var SourceMapGenerator=require("./source-map-generator").SourceMapGenerator;var util=require("./util");var REGEX_NEWLINE=/(\r?\n)/;var NEWLINE_CODE=10;var isSourceNode="$$$isSourceNode$$$";function SourceNode(i,g,f,j,h){this.children=[];this.sourceContents={};this.line=i==null?null:i;this.column=g==null?null:g;this.source=f==null?null:f;this.name=h==null?null:h;this[isSourceNode]=true;if(j!=null){this.add(j)}}SourceNode.fromStringWithSourceMap=function SourceNode_fromStringWithSourceMap(v,n,r){var q=new SourceNode();var l=v.split(REGEX_NEWLINE);var m=0;var o=function(){var a=b();var c=b()||"";return a+c;function b(){return m<l.length?l[m++]:undefined}};var p=1,u=0;var t=null;n.eachMapping(function(b){if(t!==null){if(p<b.generatedLine){s(t,o());p++;u=0}else{var c=l[m];var a=c.substr(0,b.generatedColumn-u);l[m]=c.substr(b.generatedColumn-u);u=b.generatedColumn;s(t,a);t=b;return}}while(p<b.generatedLine){q.add(o());p++}if(u<b.generatedColumn){var c=l[m];q.add(c.substr(0,b.generatedColumn));l[m]=c.substr(b.generatedColumn);u=b.generatedColumn}t=b},this);if(m<l.length){if(t){s(t,o())}q.add(l.splice(m).join(""))}n.sources.forEach(function(b){var a=n.sourceContentFor(b);if(a!=null){if(r!=null){b=util.join(r,b)}q.setSourceContent(b,a)}});return q;function s(b,a){if(b===null||b.source===undefined){q.add(a)}else{var c=r?util.join(r,b.source):b.source;q.add(new SourceNode(b.originalLine,b.originalColumn,c,a,b.name))}}};SourceNode.prototype.add=function SourceNode_add(b){if(Array.isArray(b)){b.forEach(function(a){this.add(a)},this)}else{if(b[isSourceNode]||typeof b==="string"){if(b){this.children.push(b)}}else{throw new TypeError("Expected a SourceNode, string, or an array of SourceNodes and strings. Got "+b)}}return this};SourceNode.prototype.prepend=function SourceNode_prepend(d){if(Array.isArray(d)){for(var c=d.length-1;c>=0;c--){this.prepend(d[c])}}else{if(d[isSourceNode]||typeof d==="string"){this.children.unshift(d)}else{throw new TypeError("Expected a SourceNode, string, or an array of SourceNodes and strings. Got "+d)}}return this};SourceNode.prototype.walk=function SourceNode_walk(g){var e;for(var h=0,f=this.children.length;h<f;h++){e=this.children[h];if(e[isSourceNode]){e.walk(g)}else{if(e!==""){g(e,{source:this.source,line:this.line,column:this.column,name:this.name})}}}};SourceNode.prototype.join=function SourceNode_join(h){var g;var e;var f=this.children.length;if(f>0){g=[];for(e=0;e<f-1;e++){g.push(this.children[e]);g.push(h)}g.push(this.children[e]);this.children=g}return this};SourceNode.prototype.replaceRight=function SourceNode_replaceRight(d,e){var f=this.children[this.children.length-1];if(f[isSourceNode]){f.replaceRight(d,e)}else{if(typeof f==="string"){this.children[this.children.length-1]=f.replace(d,e)}else{this.children.push("".replace(d,e))}}return this};SourceNode.prototype.setSourceContent=function SourceNode_setSourceContent(d,c){this.sourceContents[util.toSetString(d)]=c};SourceNode.prototype.walkSourceContents=function SourceNode_walkSourceContents(g){for(var h=0,f=this.children.length;h<f;h++){if(this.children[h][isSourceNode]){this.children[h].walkSourceContents(g)}}var e=Object.keys(this.sourceContents);for(var h=0,f=e.length;h<f;h++){g(util.fromSetString(e[h]),this.sourceContents[e[h]])}};SourceNode.prototype.toString=function SourceNode_toString(){var b="";this.walk(function(a){b+=a});return b};SourceNode.prototype.toStringWithSourceMap=function SourceNode_toStringWithSourceMap(k){var p={code:"",line:1,column:0};var m=new SourceMapGenerator(k);var l=false;var n=null;var j=null;var o=null;var i=null;this.walk(function(c,b){p.code+=c;if(b.source!==null&&b.line!==null&&b.column!==null){if(n!==b.source||j!==b.line||o!==b.column||i!==b.name){m.addMapping({source:b.source,original:{line:b.line,column:b.column},generated:{line:p.line,column:p.column},name:b.name})}n=b.source;j=b.line;o=b.column;i=b.name;l=true}else{if(l){m.addMapping({generated:{line:p.line,column:p.column}});n=null;l=false}}for(var d=0,a=c.length;d<a;d++){if(c.charCodeAt(d)===NEWLINE_CODE){p.line++;p.column=0;if(d+1===a){n=null;l=false}else{if(l){m.addMapping({source:b.source,original:{line:b.line,column:b.column},generated:{line:p.line,column:p.column},name:b.name})}}}else{p.column++}}});this.walkSourceContents(function(b,a){m.setSourceContent(b,a)});return{code:p.code,map:m}};exports.SourceNode=SourceNode;